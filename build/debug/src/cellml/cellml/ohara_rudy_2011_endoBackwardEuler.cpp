//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: ohara_rudy_2011
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Fri Apr  7 15:58:01 2017
//! 
//! <autogenerated>

#include "ohara_rudy_2011_endoBackwardEuler.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<143; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__v)
    {
        const double _offset_0 = var_chaste_interface__membrane__v - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__v)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__v>mTableMaxs[0] || var_chaste_interface__membrane__v<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables(const Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables&);
    Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables& operator= (const Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables&);
    Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 143;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][143];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 3.9399999999999999)) * 0.23640661938534277))) / (0.59999999999999998 + (1.0 / (exp( -0.050000000000000003 * (var_chaste_interface__membrane__v + 6.0)) + exp(0.089999999999999997 * (var_chaste_interface__membrane__v + 14.0)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] =  -1.0 / (0.59999999999999998 + (1.0 / (exp( -0.050000000000000003 * (var_chaste_interface__membrane__v + 6.0)) + exp(0.089999999999999997 * (var_chaste_interface__membrane__v + 14.0)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) / (7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] =  -1.0 / (7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) / (2.5 * (7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] =  -1.0 / (2.5 * (7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) / (100.0 + (1.0 / ((0.00012 * exp((-var_chaste_interface__membrane__v) * 0.33333333333333331)) + (0.00012 * exp(var_chaste_interface__membrane__v * 0.14285714285714285)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] =  -1.0 / (100.0 + (1.0 / ((0.00012 * exp((-var_chaste_interface__membrane__v) * 0.33333333333333331)) + (0.00012 * exp(var_chaste_interface__membrane__v * 0.14285714285714285)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) / (7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] =  -1.0 / (7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) / (2.5 * (7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] =  -1.0 / (2.5 * (7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) / (1000.0 + (1.0 / ((3.4999999999999997e-05 * exp((-(var_chaste_interface__membrane__v + 5.0)) * 0.25)) + (3.4999999999999997e-05 * exp((var_chaste_interface__membrane__v + 5.0) * 0.16666666666666666)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] =  -1.0 / (1000.0 + (1.0 / ((3.4999999999999997e-05 * exp((-(var_chaste_interface__membrane__v + 5.0)) * 0.25)) + (3.4999999999999997e-05 * exp((var_chaste_interface__membrane__v + 5.0) * 0.16666666666666666)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056))) * 0.013333333333333334;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 122.2 / (exp((-(var_chaste_interface__membrane__v + 127.2)) * 0.049115913555992145) + exp((var_chaste_interface__membrane__v + 236.80000000000001) * 0.014423770373575654));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] =  -1.0 / (122.2 / (exp((-(var_chaste_interface__membrane__v + 127.2)) * 0.049115913555992145) + exp((var_chaste_interface__membrane__v + 236.80000000000001) * 0.014423770373575654)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 8.3369999999999997)) * 0.14729709824716453))) / (12.98 + (1.0 / ((0.36520000000000002 * exp((var_chaste_interface__membrane__v - 31.66) * 0.25846471956577927)) + (4.1230000000000003e-05 * exp((-(var_chaste_interface__membrane__v - 47.780000000000001)) * 0.049067713444553483)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] =  -1.0 / (12.98 + (1.0 / ((0.36520000000000002 * exp((var_chaste_interface__membrane__v - 31.66) * 0.25846471956577927)) + (4.1230000000000003e-05 * exp((-(var_chaste_interface__membrane__v - 47.780000000000001)) * 0.049067713444553483)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 8.3369999999999997)) * 0.14729709824716453))) / (1.865 + (1.0 / ((0.066290000000000002 * exp((var_chaste_interface__membrane__v - 34.700000000000003) * 0.13596193065941536)) + (1.128e-05 * exp((-(var_chaste_interface__membrane__v - 29.739999999999998)) * 0.038550501156515031)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] =  -1.0 / (1.865 + (1.0 / ((0.066290000000000002 * exp((var_chaste_interface__membrane__v - 34.700000000000003) * 0.13596193065941536)) + (1.128e-05 * exp((-(var_chaste_interface__membrane__v - 29.739999999999998)) * 0.038550501156515031)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264))) / (817.29999999999995 + (1.0 / ((0.00023259999999999999 * exp((var_chaste_interface__membrane__v + 48.280000000000001) * 0.056179775280898875)) + (0.001292 * exp((-(var_chaste_interface__membrane__v + 210.0)) * 0.0043478260869565218)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] =  -1.0 / (817.29999999999995 + (1.0 / ((0.00023259999999999999 * exp((var_chaste_interface__membrane__v + 48.280000000000001) * 0.056179775280898875)) + (0.001292 * exp((-(var_chaste_interface__membrane__v + 210.0)) * 0.0043478260869565218)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264))) / (1.0 / ((0.01 * exp((var_chaste_interface__membrane__v - 50.0) * 0.050000000000000003)) + (0.019300000000000001 * exp((-(var_chaste_interface__membrane__v + 66.540000000000006)) * 0.032258064516129031))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] =  -1.0 / (1.0 / ((0.01 * exp((var_chaste_interface__membrane__v - 50.0) * 0.050000000000000003)) + (0.019300000000000001 * exp((-(var_chaste_interface__membrane__v + 66.540000000000006)) * 0.032258064516129031))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 87.609999999999999) * 0.13354700854700854))) * 0.0050000000000000001;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 93.810000000000002) * 0.13354700854700854))) * 0.0016666666666666668;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 42.850000000000001)) * 0.18996960486322187))) / (1.0 / ((6.7649999999999997 * exp((var_chaste_interface__membrane__v + 11.640000000000001) * 0.02876042565429968)) + (8.5519999999999996 * exp((-(var_chaste_interface__membrane__v + 77.420000000000002)) * 0.16792611251049538))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] =  -1.0 / (1.0 / ((6.7649999999999997 * exp((var_chaste_interface__membrane__v + 11.640000000000001) * 0.02876042565429968)) + (8.5519999999999996 * exp((-(var_chaste_interface__membrane__v + 77.420000000000002)) * 0.16792611251049538))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381))) / (1.0 / ((1.432e-05 * exp((-((var_chaste_interface__membrane__v + 1.196) - 0.0)) * 0.15910898965791567)) + (6.149 * exp(((var_chaste_interface__membrane__v + 0.50960000000000005) - 0.0) * 0.049333991119881598))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] =  -1.0 / (1.0 / ((1.432e-05 * exp((-((var_chaste_interface__membrane__v + 1.196) - 0.0)) * 0.15910898965791567)) + (6.149 * exp(((var_chaste_interface__membrane__v + 0.50960000000000005) - 0.0) * 0.049333991119881598))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381))) / (1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] =  -1.0 / (1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 89.099999999999994) - 0.0) * 0.16431153466973381))) / (3.0 * (1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] =  -1.0 / (3.0 * (1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] = (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381))) / (2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][36] =  -1.0 / (2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][37] = (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381))) / (1.46 * (2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][38] =  -1.0 / (1.46 * (2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][39] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 39.57)) * 0.10130685847431871))) / (1.0 / ((6.7649999999999997 * exp((var_chaste_interface__membrane__v + 11.640000000000001) * 0.02876042565429968)) + (8.5519999999999996 * exp((-(var_chaste_interface__membrane__v + 77.420000000000002)) * 0.16792611251049538))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][40] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.34)) * 0.067476383265856948))) / (1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-(var_chaste_interface__membrane__v - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][41] =  -1.0 / (1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-(var_chaste_interface__membrane__v - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][42] = (1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 24.34)) * 0.067476383265856948))) / (1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-(var_chaste_interface__membrane__v - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][43] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328))) / ((4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][44] =  -1.0 / ((4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][45] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328))) / ((1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][46] =  -1.0 / ((1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][47] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328))) / ((23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][48] =  -1.0 / ((23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][49] = (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328))) / ((1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][50] =  -1.0 / ((1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][51] = 0.011348161597821153 * (1.0 + exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][52] = 1.0 / exp((0.16700000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][53] = pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][54] = 50403.763999999996 * (3.8799692706433766e-07 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][55] = 0.0032258064516129032 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][56] = exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616) * 0.011348161597821153;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][57] = exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][58] = -((0.20000000000000001 * pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) * 0.00012878077165026273);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][59] = 3.8799692706433766e-07 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][60] = 1.0 + (1.0 / exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][61] = 1.0 / exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][62] = (0.013333333333333334 * pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) * 0.00012878077165026273;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][63] = 1.0 / pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][64] = (0.20000000000000001 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616)) * 0.011348161597821153;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][65] = 0.011348161597821153 * (1.0 / exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][66] = 11.605123887418811 * (0.0032258064516129032 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][67] = 0.20000000000000001 * pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][68] = (1.0 / pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) * 234.67806653371301;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][69] = 0.00012878077165026273 * (1.0 / pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][70] = 0.20000000000000001 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][71] = ( -0.011348161597821153 * (1.0 / exp((0.16700000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616))) * (50403.763999999996 * (3.8799692706433766e-07 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][72] = (-((0.20000000000000001 * pow(exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) * 0.00012878077165026273)) * 0.037435883507802616;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][73] =  -0.0066137566140000003 * (1.0 / pow(1.0 + exp((0.0066137566140000003 * var_chaste_interface__membrane__v) - 1.412698413), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][74] = exp((0.0066137566140000003 * var_chaste_interface__membrane__v) - 1.412698413);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][75] = 0.0066137566140000003 * ((1.0 / pow(1.0 + exp((0.0066137566140000003 * var_chaste_interface__membrane__v) - 1.412698413), 2.0)) * exp((0.0066137566140000003 * var_chaste_interface__membrane__v) - 1.412698413));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][76] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][77] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][78] = 1.0 / (exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) - 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][79] = 0.059999999999999998 * ((1.0 / pow(1.0 + exp((0.10000000000000001 * var_chaste_interface__membrane__v) - 1.0), 2.0)) * exp((0.10000000000000001 * var_chaste_interface__membrane__v) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][80] =  -0.059999999999999998 * ((1.0 / pow(1.0 + exp((0.10000000000000001 * var_chaste_interface__membrane__v) - 1.0), 2.0)) * exp((0.10000000000000001 * var_chaste_interface__membrane__v) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][81] = 1.0 / (exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][82] = 1.0 / (1.0 + exp((0.02617115938 * var_chaste_interface__membrane__v) + 1.434441246));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][83] = 1.0 - (1.0 / (1.0 + exp((0.02617115938 * var_chaste_interface__membrane__v) + 1.434441246)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][84] = 1.0 / (1.0 + exp((0.013333333333333334 * var_chaste_interface__membrane__v) + 0.73333333333333328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][85] = 1.0 / (1.0 + exp((0.033333333333333333 * var_chaste_interface__membrane__v) - 0.33333333333333331));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][86] = 1.0 / (1.0 + exp((0.0066137566140000003 * var_chaste_interface__membrane__v) - 1.412698413));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][87] = 1.0 - (1.0 / (1.0 + exp((0.0066137566140000003 * var_chaste_interface__membrane__v) - 1.412698413)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][88] = 1.0 / exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][89] = ((1.0 / exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616)) * 1.155) * 0.037435883507802616;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][90] = (1.0 / pow(exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) / exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][91] = 1.6790786303582269e-06 / pow(pow(exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][92] = 4.6644804351351539e-05 * ((1.0 / pow(exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) / exp((0.38500000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][93] = 1.0 / exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][94] = 0.0013388973049288464 * ((1.0 / pow(exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) / exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][95] = (1.0 / pow(exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0)) / exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][96] = 1.0 / pow(pow(exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][97] = 0.000147569415290295 * (1.0 / pow(pow(exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616), 2.0), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][98] = 0.11021712774165104 * (1.0 / exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][99] = ((1.0 / exp(( -0.051666666666666666 * var_chaste_interface__membrane__v) * 0.037435883507802616)) *  -0.155) * 0.037435883507802616;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][100] = 1.0 + exp(( -0.054525627040000003 * var_chaste_interface__membrane__v) + 0.78953107950000001);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][101] = 1.0 / pow(exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) - 1.0, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][102] = 0.69999999999999996 - (0.59999999999999998 * (1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__membrane__v) - 1.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][103] = 0.29999999999999999 + (0.59999999999999998 * (1.0 / (1.0 + exp((0.10000000000000001 * var_chaste_interface__membrane__v) - 1.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][104] = 1.0 / pow(exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0, 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][105] = pow(1.0 + exp(( -0.054525627040000003 * var_chaste_interface__membrane__v) + 0.78953107950000001), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][106] = exp(( -0.054525627040000003 * var_chaste_interface__membrane__v) + 0.78953107950000001);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][107] =  -0.02617115938 * (1.0 / pow(1.0 + exp((0.02617115938 * var_chaste_interface__membrane__v) + 1.434441246), 2.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][108] = exp((0.02617115938 * var_chaste_interface__membrane__v) + 1.434441246);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][109] = (0.02617115938 * (1.0 / pow(1.0 + exp((0.02617115938 * var_chaste_interface__membrane__v) + 1.434441246), 2.0))) * exp((0.02617115938 * var_chaste_interface__membrane__v) + 1.434441246);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][110] = (1.0 / (1.0 + exp((0.013333333333333334 * var_chaste_interface__membrane__v) + 0.73333333333333328))) * (1.0 / (1.0 + exp((0.033333333333333333 * var_chaste_interface__membrane__v) - 0.33333333333333331)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][111] = pow(1.0 + exp((0.033333333333333333 * var_chaste_interface__membrane__v) - 0.33333333333333331), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][112] = exp((0.033333333333333333 * var_chaste_interface__membrane__v) - 0.33333333333333331);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][113] = pow(1.0 + exp((0.013333333333333334 * var_chaste_interface__membrane__v) + 0.73333333333333328), 2.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][114] = exp((0.013333333333333334 * var_chaste_interface__membrane__v) + 0.73333333333333328);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][115] = -(1.0 + exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][116] = ((1.0 / exp((0.16700000000000001 * var_chaste_interface__membrane__v) * 0.037435883507802616)) * 0.011348161597821153) * (1.0 + exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][117] = 1.0 + exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][118] = exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616) * 0.00012878077165026273;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][119] = (0.20000000000000001 * exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616)) * 0.00012878077165026273;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][120] = 5000.0 * (1.0 + exp((0.52239999999999998 * var_chaste_interface__membrane__v) * 0.037435883507802616));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][121] = 0.0032258064516129032 * exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][122] = 0.0032258064516129032 * exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][123] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) * (1.0 / (exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][124] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) * (1.0 / (exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) - 1.0));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][125] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][126] = 1.0 - (1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][127] = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][128] = 1.0 - (0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][129] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][130] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][131] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][132] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 54.810000000000002) * 0.026171159382360639));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][133] = 1.0 - (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 54.810000000000002) * 0.026171159382360639)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][134] = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 55.0) * 0.013333333333333334))) * 1.0) / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.033333333333333333));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][135] = 1.0 + exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][136] = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][137] = 1.0 + (1.0 / exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][138] = exp((var_chaste_interface__membrane__v * 16112.995000000001) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][139] = 9.0730000000000004 * exp((var_chaste_interface__membrane__v *  -14955.174999999999) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][140] = 27.780000000000001 * exp((var_chaste_interface__membrane__v * 111440.175) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][141] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.48)) * 0.054525627044711013));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][142] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) - 1.0;
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[143];
    
    // Lookup tables
    double (*_lookup_table_0)[143];
    
};

std::auto_ptr<Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables> Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellohara_rudy_2011_endoFromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Amplitude =  -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Cellohara_rudy_2011_endoFromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[9];
    }
    
    Cellohara_rudy_2011_endoFromCellMLBackwardEuler::Cellohara_rudy_2011_endoFromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<12>(
                41,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellohara_rudy_2011_endoFromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        this->mParameters[0] = 1.0; // (c,ryr__Jrel_scaling_factor) [dimensionless]
        this->mParameters[1] = 1.0; // (c,SERCA__Jup_b) [dimensionless]
        this->mParameters[2] = 1.8; // (c,extracellular__cao) [millimolar]
        this->mParameters[3] = 5.4; // (c,extracellular__ko) [millimolar]
        this->mParameters[4] = 140; // (c,extracellular__nao) [millimolar]
        this->mParameters[5] = 0.0001; // (c,ICaL__PCa_b) [dimensionless]
        this->mParameters[6] = 2.5e-8; // (c,ICab__PCab) [milliS_per_microF]
        this->mParameters[7] = 0.003; // (c,IKb__GKb_b) [milliS_per_microF]
        this->mParameters[8] = 3.75e-10; // (c,INab__PNab) [milliS_per_microF]
        this->mParameters[9] = 0.0005; // (c,IpCa__GpCa) [milliS_per_microF]
        this->mParameters[10] = 75; // (c,INa__GNa) [milliS_per_microF]
        this->mParameters[11] = 0.1908; // (c,IK1__GK1_b) [milliS_per_microF]
        this->mParameters[12] = 0.0075; // (c,INaL__GNaL_b) [milliS_per_microF]
        this->mParameters[13] = 0.046; // (c,IKr__GKr_b) [milliS_per_microF]
        this->mParameters[14] = 0.0034; // (c,IKs__GKs_b) [milliS_per_microF]
        this->mParameters[15] = 0.0008; // (c,INaCa_i__Gncx_b) [milliS_per_microF]
        this->mParameters[16] = 30; // (c,INaK__Pnak_b) [milliS_per_microF]
        this->mParameters[17] = 0.02; // (c,Ito__Gto_b) [milliS_per_microF]
    }
    
    Cellohara_rudy_2011_endoFromCellMLBackwardEuler::~Cellohara_rudy_2011_endoFromCellMLBackwardEuler()
    {
    }
    
    AbstractLookupTableCollection* Cellohara_rudy_2011_endoFromCellMLBackwardEuler::GetLookupTableCollection()
    {
        return Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance();
    }
    
    double Cellohara_rudy_2011_endoFromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[1];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[2];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[3];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[4];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[5];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[6];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cai = rY[9];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[125] * var_chaste_interface__Ito__iF) + (_lt_0_row[126] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[125] * var_chaste_interface__Ito__iFp) + (_lt_0_row[126] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[127] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[127] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[130]) - (0.75 * mParameters[4]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[130]) - (0.75 * mParameters[3]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[132] * var_chaste_interface__IKr__xrf) + (_lt_0_row[133] * var_chaste_interface__IKr__xrs)) * _lt_0_row[134] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[140], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[139], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[76]) - mParameters[4])) / _lt_0_row[142]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[141] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaL = var_ICaL__ICaL; // microA_per_microF
        const double var_chaste_interface__ICab__ICab = var_ICab__ICab; // microA_per_microF
        const double var_chaste_interface__INa__INa = var_INa__INa; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaK = var_ICaL__ICaK; // microA_per_microF
        const double var_chaste_interface__INaL__INaL = var_INaL__INaL; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_i = var_INaCa_i__INaCa_i; // microA_per_microF
        const double var_chaste_interface__INab__INab = var_INab__INab; // microA_per_microF
        const double var_chaste_interface__IKs__IKs = var_IKs__IKs; // microA_per_microF
        const double var_chaste_interface__INaK__INaK = var_INaK__INaK; // microA_per_microF
        const double var_chaste_interface__IKb__IKb = var_IKb__IKb; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaNa = var_ICaL__ICaNa; // microA_per_microF
        const double var_chaste_interface__IK1__IK1 = var_IK1__IK1; // microA_per_microF
        const double var_chaste_interface__Ito__Ito = var_Ito__Ito; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_ss = var_INaCa_i__INaCa_ss; // microA_per_microF
        const double var_chaste_interface__IKr__IKr = var_IKr__IKr; // microA_per_microF
        const double var_chaste_interface__IpCa__IpCa = var_IpCa__IpCa; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__INa + var_chaste_interface__INaL__INaL + var_chaste_interface__Ito__Ito + var_chaste_interface__ICaL__ICaL + var_chaste_interface__ICaL__ICaNa + var_chaste_interface__ICaL__ICaK + var_chaste_interface__IKr__IKr + var_chaste_interface__IKs__IKs + var_chaste_interface__IK1__IK1 + var_chaste_interface__INaCa_i__INaCa_i + var_chaste_interface__INaCa_i__INaCa_ss + var_chaste_interface__INaK__INaK + var_chaste_interface__INab__INab + var_chaste_interface__IKb__IKb + var_chaste_interface__IpCa__IpCa + var_chaste_interface__ICab__ICab) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellohara_rudy_2011_endoFromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rResidual[12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        
        double var_chaste_interface__CaMK__CaMKt = rCurrentGuess[0];
        double var_chaste_interface__ICaL__nca = rCurrentGuess[1];
        double var_chaste_interface__intracellular_ions__cai = rCurrentGuess[2];
        double var_chaste_interface__intracellular_ions__cajsr = rCurrentGuess[3];
        double var_chaste_interface__intracellular_ions__cansr = rCurrentGuess[4];
        double var_chaste_interface__intracellular_ions__cass = rCurrentGuess[5];
        double var_chaste_interface__intracellular_ions__ki = rCurrentGuess[6];
        double var_chaste_interface__intracellular_ions__kss = rCurrentGuess[7];
        double var_chaste_interface__intracellular_ions__nai = rCurrentGuess[8];
        double var_chaste_interface__intracellular_ions__nass = rCurrentGuess[9];
        double var_chaste_interface__ryr__Jrelnp = rCurrentGuess[10];
        double var_chaste_interface__ryr__Jrelp = rCurrentGuess[11];
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[125] * var_chaste_interface__Ito__iF) + (_lt_0_row[126] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[125] * var_chaste_interface__Ito__iFp) + (_lt_0_row[126] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[127] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[127] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[130]) - (0.75 * mParameters[4]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[130]) - (0.75 * mParameters[3]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[132] * var_chaste_interface__IKr__xrf) + (_lt_0_row[133] * var_chaste_interface__IKr__xrs)) * _lt_0_row[134] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[140], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[139], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[76]) - mParameters[4])) / _lt_0_row[142]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[141] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_diff__JdiffNa = (var_chaste_interface__intracellular_ions__nass - var_chaste_interface__intracellular_ions__nai) * 0.5; // millimolar_per_millisecond
        const double var_diff__Jdiff = (var_chaste_interface__intracellular_ions__cass - var_chaste_interface__intracellular_ions__cai) * 5.0; // millimolar_per_millisecond
        const double var_SERCA__fJupp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_SERCA__Jup = mParameters[1] * ((((1.0 - var_SERCA__fJupp) * ((var_chaste_interface__intracellular_ions__cai * 0.0043750000000000004) / (var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003))) + (var_SERCA__fJupp * ((var_chaste_interface__intracellular_ions__cai * 0.01203125) / ((var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003) - 0.00017000000000000001)))) - ((0.0039375 * var_chaste_interface__intracellular_ions__cansr) * 0.066666666666666666)); // millimolar_per_millisecond
        const double var_diff__JdiffK = (var_chaste_interface__intracellular_ions__kss - var_chaste_interface__intracellular_ions__ki) * 0.5; // millimolar_per_millisecond
        const double var_ryr__fJrelp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ryr__Jrel = mParameters[0] * (((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp) + (var_ryr__fJrelp * var_chaste_interface__ryr__Jrelp)); // millimolar_per_millisecond
        const double var_trans_flux__Jtr = (var_chaste_interface__intracellular_ions__cansr - var_chaste_interface__intracellular_ions__cajsr) * 0.01; // millimolar_per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca * 1.0; // per_millisecond
        const double var_ryr__tau_rel_temp = 4.75 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double var_ryr__tau_relp_temp = 5.9375 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double d_dt_chaste_interface__CaMK__CaMKt = (0.050000000000000003 * var_CaMK__CaMKb * (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt)) - (0.00068000000000000005 * var_chaste_interface__CaMK__CaMKt); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nai = (((-(var_INa__INa + var_INaL__INaL + (3.0 * var_INaCa_i__INaCa_i) + (3.0 * var_INaK__INaK) + var_INab__INab)) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffNa * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nass = (((-(var_ICaL__ICaNa + (3.0 * var_INaCa_i__INaCa_ss))) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffNa; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__ki = (((-((var_Ito__Ito + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_IKb__IKb + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())) - (2.0 * var_INaK__INaK))) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffK * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__kss = (((-var_ICaL__ICaK) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffK; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cass = (1.0 / (1.0 + (4.0890000000000003e-05 / pow(0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass, 2.0)) + (0.0097788000000000007 / pow(0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass, 2.0)))) * (((((-(var_ICaL__ICaL - (2.0 * var_INaCa_i__INaCa_ss))) * 0.00015335760000000003) * 6.8196987237689441) + ((var_ryr__Jrel * 1.8237120000000002e-07) * 1315997.2627256932)) - var_diff__Jdiff); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cansr = var_SERCA__Jup - ((var_trans_flux__Jtr * 1.8237120000000002e-07) * 476810.60243684537); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cajsr = (1.0 / (1.0 + (8.0 / pow(0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr, 2.0)))) * (var_trans_flux__Jtr - var_ryr__Jrel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cai = (1.0 / (1.0 + (0.00011900000000000002 / pow(0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai, 2.0)) + (3.5000000000000004e-05 / pow(0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai, 2.0)))) * (((((-((var_IpCa__IpCa + var_ICab__ICab) - (2.0 * var_INaCa_i__INaCa_i))) * 0.00015335760000000003) * 0.20057937422849834) - ((var_SERCA__Jup * 2.0972688000000006e-06) * 38705.801844873327)) + ((var_diff__Jdiff * 7.5988000000000021e-07) * 38705.801844873327)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__ICaL__nca = ((1.0 / ((1000.0 / var_ICaL__km2n) + pow(1.0 + (0.002 / var_chaste_interface__intracellular_ions__cass), 4.0))) * 1000.0) - (var_chaste_interface__ICaL__nca * var_ICaL__km2n); // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrelnp = (((2.375 * (-var_ICaL__ICaL)) / (1.0 + (1.0 * pow(1.5 / var_chaste_interface__intracellular_ions__cajsr, 8.0)))) - var_chaste_interface__ryr__Jrelnp) / ((var_ryr__tau_rel_temp < 0.001) ? 0.001 : var_ryr__tau_rel_temp); // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrelp = (((2.96875 * (-var_ICaL__ICaL)) / (1.0 + pow(1.5 / var_chaste_interface__intracellular_ions__cajsr, 8.0))) - var_chaste_interface__ryr__Jrelp) / ((var_ryr__tau_relp_temp < 0.001) ? 0.001 : var_ryr__tau_relp_temp); // per_millisecond
        
        rResidual[0] = rCurrentGuess[0] - rY[1] - mDt*d_dt_chaste_interface__CaMK__CaMKt;
        rResidual[8] = rCurrentGuess[8] - rY[2] - mDt*d_dt_chaste_interface__intracellular_ions__nai;
        rResidual[9] = rCurrentGuess[9] - rY[3] - mDt*d_dt_chaste_interface__intracellular_ions__nass;
        rResidual[6] = rCurrentGuess[6] - rY[4] - mDt*d_dt_chaste_interface__intracellular_ions__ki;
        rResidual[7] = rCurrentGuess[7] - rY[5] - mDt*d_dt_chaste_interface__intracellular_ions__kss;
        rResidual[5] = rCurrentGuess[5] - rY[6] - mDt*d_dt_chaste_interface__intracellular_ions__cass;
        rResidual[4] = rCurrentGuess[4] - rY[7] - mDt*d_dt_chaste_interface__intracellular_ions__cansr;
        rResidual[3] = rCurrentGuess[3] - rY[8] - mDt*d_dt_chaste_interface__intracellular_ions__cajsr;
        rResidual[2] = rCurrentGuess[2] - rY[9] - mDt*d_dt_chaste_interface__intracellular_ions__cai;
        rResidual[1] = rCurrentGuess[1] - rY[33] - mDt*d_dt_chaste_interface__ICaL__nca;
        rResidual[10] = rCurrentGuess[10] - rY[39] - mDt*d_dt_chaste_interface__ryr__Jrelnp;
        rResidual[11] = rCurrentGuess[11] - rY[40] - mDt*d_dt_chaste_interface__ryr__Jrelp;
    }
    
    void Cellohara_rudy_2011_endoFromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[12], double rJacobian[12][12])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        
        double var_chaste_interface__CaMK__CaMKt = rCurrentGuess[0];
        double var_chaste_interface__ICaL__nca = rCurrentGuess[1];
        double var_chaste_interface__intracellular_ions__cai = rCurrentGuess[2];
        double var_chaste_interface__intracellular_ions__cajsr = rCurrentGuess[3];
        double var_chaste_interface__intracellular_ions__cansr = rCurrentGuess[4];
        double var_chaste_interface__intracellular_ions__cass = rCurrentGuess[5];
        double var_chaste_interface__intracellular_ions__ki = rCurrentGuess[6];
        double var_chaste_interface__intracellular_ions__kss = rCurrentGuess[7];
        double var_chaste_interface__intracellular_ions__nai = rCurrentGuess[8];
        double var_chaste_interface__intracellular_ions__nass = rCurrentGuess[9];
        double var_chaste_interface__ryr__Jrelnp = rCurrentGuess[10];
        double var_chaste_interface__ryr__Jrelp = rCurrentGuess[11];
        
        const double var_chaste_interface__environment__dt = mDt;

        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        const double var_t5 = mParameters[15]; // dimensionless
        const double var_t7 = pow(var_chaste_interface__intracellular_ions__cass, 2.0); // dimensionless
        const double var_t8 = 1.0 / var_t7; // dimensionless
        const double var_t10 = (2.2499999999999996e-08 * var_t8) + 1.0; // dimensionless
        const double var_t11 = 1.0 / var_t10; // dimensionless
        const double var_t12 = var_t5 * var_t11; // dimensionless
        const double var_t24 = (_lt_0_row[51] * var_chaste_interface__intracellular_ions__nass) + 1.0; // dimensionless
        const double var_t26 = 1.0 / pow(var_t24, 2.0); // dimensionless
        const double var_t27 = var_t26 * 60000.0; // dimensionless
        const double var_t40 = 1.0 / var_t24; // dimensionless
        const double var_t42 = (var_t40 * 60000.0) * _lt_0_row[52]; // dimensionless
        const double var_t49 = 0.011348161597821153 * var_t40; // dimensionless
        const double var_t50 = var_t49 * 5000.0; // dimensionless
        const double var_t53 = pow(var_chaste_interface__intracellular_ions__nass, 2.0); // dimensionless
        const double var_t58 = 0.00012878077165026273 * var_t26; // dimensionless
        const double var_t65 = var_t53 * var_chaste_interface__intracellular_ions__nass; // dimensionless
        const double var_t67 = var_chaste_interface__intracellular_ions__nass * 0.066666666666666666; // dimensionless
        const double var_t70 = (0.20000000000000001 * var_chaste_interface__intracellular_ions__nass) + 1.0; // dimensionless
        const double var_t72 = (var_t67 * var_t70) + 1.0; // dimensionless
        const double var_t73 = 1.0 / var_t72; // dimensionless
        const double var_t74 = var_t65 * var_t73; // dimensionless
        const double var_t76 = var_t74 * 0.013333333333333334; // dimensionless
        const double var_t78 = var_t40 * 60000.0; // dimensionless
        const double var_t79 = _lt_0_row[56] * var_t78; // dimensionless
        const double var_t81 = var_t73 * var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_t83 = (var_t76 * var_t79) + (var_t81 * 1500000.0); // dimensionless
        const double var_t85 = var_chaste_interface__intracellular_ions__nass * _lt_0_row[57]; // dimensionless
        const double var_t86 = var_t85 * var_t50; // dimensionless
        const double var_t87 = var_t42 + var_t86; // dimensionless
        const double var_t88 = 5000.0 * var_t87; // dimensionless
        const double var_t89 = var_t74 * 0.066666666666666666; // dimensionless
        const double var_t93 = var_t49 * 60000.0; // dimensionless
        const double var_t102 = var_t26 * 60000.0; // dimensionless
        const double var_t108 = 5000.0 * var_t65; // dimensionless
        const double var_t112 = mParameters[4] * 0.011348161597821153; // dimensionless
        const double var_t116 = 1.0 + (var_t112 * _lt_0_row[60]); // dimensionless
        const double var_t117 = 1.0 / var_t116; // dimensionless
        const double var_t118 = var_t117 * 60000.0; // dimensionless
        const double var_t119 = _lt_0_row[61] * var_t117; // dimensionless
        const double var_t121 = (var_t112 * var_t119) * 5000.0; // dimensionless
        const double var_t122 = (5000.0 + var_t118) + var_t121; // dimensionless
        const double var_t123 = 60000.0 * var_t122; // dimensionless
        const double var_t136 = var_t73 * 0.066666666666666666; // dimensionless
        const double var_t137 = var_t136 * 0.20000000000000001; // dimensionless
        const double var_t138 = var_t108 * var_t137; // dimensionless
        const double var_t148 = pow(mParameters[4], 2.0); // dimensionless
        const double var_t159 = var_t88 * var_t83; // dimensionless
        const double var_t161 = (_lt_0_row[56] * var_t78) * var_t122; // dimensionless
        const double var_t162 = var_t138 * var_t161; // dimensionless
        const double var_t168 = 1.0 / (13.5 + ((mParameters[4] * 0.066666666666666666) * ((0.20000000000000001 * mParameters[4]) + 1.0))); // dimensionless
        const double var_t169 = var_t168 * mParameters[2]; // dimensionless
        const double var_t170 = var_t169 * 1500000.0; // dimensionless
        const double var_t171 = var_t170 * var_t89; // dimensionless
        const double var_t174 = (var_t42 + var_t86) + 5000.0; // dimensionless
        const double var_t176 = (_lt_0_row[64] * var_t78) * var_t174; // dimensionless
        const double var_t177 = var_t171 * var_t176; // dimensionless
        const double var_t178 = var_t87 * var_t73; // dimensionless
        const double var_t179 = var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_t180 = var_t148 * mParameters[4]; // dimensionless
        const double var_t181 = var_t180 * 0.011348161597821153; // dimensionless
        const double var_t183 = var_t168 * 0.066666666666666666; // dimensionless
        const double var_t185 = var_t183 * 12000.0; // dimensionless
        const double var_t186 = (var_t181 * var_t119) * var_t185; // dimensionless
        const double var_t187 = var_t170 + var_t186; // dimensionless
        const double var_t188 = var_t179 * var_t187; // dimensionless
        const double var_t189 = var_t178 * var_t188; // dimensionless
        const double var_t190 = var_t118 + var_t121; // dimensionless
        const double var_t191 = 1500000.0 * var_t190; // dimensionless
        const double var_t193 = (var_t169 * var_t191) * var_t83; // dimensionless
        const double var_t194 = var_t181 * _lt_0_row[61]; // dimensionless
        const double var_t195 = var_t117 * var_t168; // dimensionless
        const double var_t196 = var_t195 * 0.066666666666666666; // dimensionless
        const double var_t197 = var_t194 * var_t196; // dimensionless
        const double var_t198 = 12000.0 * var_t73; // dimensionless
        const double var_t201 = ((var_t197 * var_t198) * var_t179) * var_t122; // dimensionless
        const double var_t202 = 5000.0 * var_t180; // dimensionless
        const double var_t204 = _lt_0_row[65] * var_t117; // dimensionless
        const double var_t205 = var_t202 * var_t204; // dimensionless
        const double var_t206 = 12000.0 * var_t174; // dimensionless
        const double var_t208 = (var_t205 * var_t183) * var_t206; // dimensionless
        const double var_t209 = var_t190 * 5000.0; // dimensionless
        const double var_t210 = var_t209 * var_t187; // dimensionless
        const double var_t211 = ((((((var_t159 + var_t162) + var_t177) + var_t189) + var_t193) + var_t201) + var_t208) + var_t210; // dimensionless
        const double var_t212 = 1.0 / var_t211; // dimensionless
        const double var_t215 = var_t159 + var_t162; // dimensionless
        const double var_t217 = 1.0 / pow(var_t211, 2.0); // dimensionless
        const double var_t218 = var_t215 * var_t217; // dimensionless
        const double var_t219 = var_t218 * var_t168; // dimensionless
        const double var_t220 = mParameters[2] * 1500000.0; // dimensionless
        const double var_t292 = var_t177 + var_t189; // dimensionless
        const double var_t293 = var_t292 * var_t217; // dimensionless
        const double var_t300 = var_t195 * 800.0; // dimensionless
        const double var_t303 = var_t218 * var_t194; // dimensionless
        const double var_t308 = var_t215 * var_t212; // dimensionless
        const double var_t322 = var_t117 * 5000.0; // dimensionless
        const double var_t323 = _lt_0_row[65] * var_t322; // dimensionless
        const double var_t325 = var_t293 * var_t112; // dimensionless
        const double var_t329 = var_t292 * var_t212; // dimensionless
        const double var_t345 = (_lt_0_row[56] * var_t40) * 5000.0; // dimensionless
        const double var_t347 = var_t193 + var_t201; // dimensionless
        const double var_t349 = (var_t347 * var_t217) * var_t85; // dimensionless
        const double var_t352 = var_t347 * var_t212; // dimensionless
        const double var_t359 = var_t26 * 5000.0; // dimensionless
        const double var_t366 = _lt_0_row[70] * var_t93; // dimensionless
        const double var_t369 = var_t208 + var_t210; // dimensionless
        const double var_t371 = (var_t369 * var_t217) * var_t89; // dimensionless
        const double var_t376 = var_t369 * var_t212; // dimensionless
        const double var_t393 = pow(var_chaste_interface__intracellular_ions__cai, 2.0); // dimensionless
        const double var_t394 = 1.0 / var_t393; // dimensionless
        const double var_t396 = (var_t394 * 2.2499999999999996e-08) + 1.0; // dimensionless
        const double var_t397 = 1.0 / var_t396; // dimensionless
        const double var_t398 = var_t5 * var_t397; // dimensionless
        const double var_t401 = (_lt_0_row[51] * var_chaste_interface__intracellular_ions__nai) + 1.0; // dimensionless
        const double var_t403 = 1.0 / pow(var_t401, 2.0); // dimensionless
        const double var_t404 = var_t403 * 60000.0; // dimensionless
        const double var_t409 = 1.0 / var_t401; // dimensionless
        const double var_t411 = (var_t409 * 60000.0) * _lt_0_row[52]; // dimensionless
        const double var_t415 = 0.011348161597821153 * var_t409; // dimensionless
        const double var_t416 = var_t415 * 5000.0; // dimensionless
        const double var_t419 = pow(var_chaste_interface__intracellular_ions__nai, 2.0); // dimensionless
        const double var_t421 = 0.00012878077165026273 * var_t403; // dimensionless
        const double var_t426 = var_t419 * var_chaste_interface__intracellular_ions__nai; // dimensionless
        const double var_t427 = var_chaste_interface__intracellular_ions__nai * 0.066666666666666666; // dimensionless
        const double var_t429 = (0.20000000000000001 * var_chaste_interface__intracellular_ions__nai) + 1.0; // dimensionless
        const double var_t431 = (var_t427 * var_t429) + 1.0; // dimensionless
        const double var_t432 = 1.0 / var_t431; // dimensionless
        const double var_t433 = var_t426 * var_t432; // dimensionless
        const double var_t434 = var_t433 * 0.013333333333333334; // dimensionless
        const double var_t435 = var_t409 * 60000.0; // dimensionless
        const double var_t436 = _lt_0_row[56] * var_t435; // dimensionless
        const double var_t438 = var_t432 * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t440 = (var_t434 * var_t436) + (var_t438 * 1500000.0); // dimensionless
        const double var_t442 = var_chaste_interface__intracellular_ions__nai * _lt_0_row[57]; // dimensionless
        const double var_t443 = var_t442 * var_t416; // dimensionless
        const double var_t444 = var_t411 + var_t443; // dimensionless
        const double var_t445 = 5000.0 * var_t444; // dimensionless
        const double var_t446 = var_t433 * 0.066666666666666666; // dimensionless
        const double var_t448 = var_t415 * 60000.0; // dimensionless
        const double var_t455 = var_t403 * 60000.0; // dimensionless
        const double var_t461 = 5000.0 * var_t426; // dimensionless
        const double var_t473 = var_t432 * 0.066666666666666666; // dimensionless
        const double var_t474 = var_t473 * 0.20000000000000001; // dimensionless
        const double var_t475 = var_t461 * var_t474; // dimensionless
        const double var_t480 = var_t445 * var_t440; // dimensionless
        const double var_t482 = (_lt_0_row[56] * var_t435) * var_t122; // dimensionless
        const double var_t483 = var_t475 * var_t482; // dimensionless
        const double var_t484 = var_t170 * var_t446; // dimensionless
        const double var_t485 = (var_t411 + var_t443) + 5000.0; // dimensionless
        const double var_t487 = (_lt_0_row[64] * var_t435) * var_t485; // dimensionless
        const double var_t488 = var_t484 * var_t487; // dimensionless
        const double var_t489 = var_t444 * var_t432; // dimensionless
        const double var_t490 = var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_t491 = var_t490 * var_t187; // dimensionless
        const double var_t492 = var_t489 * var_t491; // dimensionless
        const double var_t494 = (var_t169 * var_t191) * var_t440; // dimensionless
        const double var_t495 = 12000.0 * var_t432; // dimensionless
        const double var_t498 = ((var_t197 * var_t495) * var_t490) * var_t122; // dimensionless
        const double var_t499 = 12000.0 * var_t485; // dimensionless
        const double var_t501 = (var_t205 * var_t183) * var_t499; // dimensionless
        const double var_t502 = ((((((var_t480 + var_t483) + var_t488) + var_t492) + var_t494) + var_t498) + var_t501) + var_t210; // dimensionless
        const double var_t503 = 1.0 / var_t502; // dimensionless
        const double var_t506 = var_t480 + var_t483; // dimensionless
        const double var_t508 = 1.0 / pow(var_t502, 2.0); // dimensionless
        const double var_t509 = var_t506 * var_t508; // dimensionless
        const double var_t510 = var_t509 * var_t168; // dimensionless
        const double var_t556 = var_t488 + var_t492; // dimensionless
        const double var_t557 = var_t556 * var_t508; // dimensionless
        const double var_t565 = var_t509 * var_t194; // dimensionless
        const double var_t570 = var_t506 * var_t503; // dimensionless
        const double var_t581 = var_t557 * var_t112; // dimensionless
        const double var_t585 = var_t556 * var_t503; // dimensionless
        const double var_t594 = (_lt_0_row[56] * var_t409) * 5000.0; // dimensionless
        const double var_t596 = var_t494 + var_t498; // dimensionless
        const double var_t598 = (var_t596 * var_t508) * var_t442; // dimensionless
        const double var_t601 = var_t596 * var_t503; // dimensionless
        const double var_t608 = var_t403 * 5000.0; // dimensionless
        const double var_t615 = _lt_0_row[70] * var_t448; // dimensionless
        const double var_t618 = var_t501 + var_t210; // dimensionless
        const double var_t620 = (var_t618 * var_t508) * var_t446; // dimensionless
        const double var_t625 = var_t618 * var_t503; // dimensionless
        const double var_t643 = mParameters[17]; // dimensionless
        const double var_t646 = 1.0 / var_chaste_interface__intracellular_ions__ki; // dimensionless
        const double var_t651 = ( -26.712338705498265 * log(mParameters[3] * var_t646)) + var_chaste_interface__membrane__v; // dimensionless
        const double var_t652 = var_t643 * var_t651; // dimensionless
        const double var_t653 = 1.0 - var_chaste_interface__CaMK__CaMKt; // dimensionless
        const double var_t654 = 0.050000000000000003 * var_t653; // dimensionless
        const double var_t655 = 1.0 / var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_t657 = (var_t655 * 0.0015) + 1.0; // dimensionless
        const double var_t658 = 1.0 / var_t657; // dimensionless
        const double var_t660 = (var_t654 * var_t658) + var_chaste_interface__CaMK__CaMKt; // dimensionless
        const double var_t663 = 1.0 + (0.14999999999999999 / var_t660); // dimensionless
        const double var_t664 = 1.0 / var_t663; // dimensionless
        const double var_t665 = 1.0 - var_t664; // dimensionless
        const double var_t666 = var_t665 * var_chaste_interface__Ito__a; // dimensionless
        const double var_t681 = var_t664 * var_chaste_interface__Ito__ap; // dimensionless
        const double var_t691 = pow(var_chaste_interface__INa__m, 2.0); // dimensionless
        const double var_t692 = var_t691 * var_chaste_interface__INa__m; // dimensionless
        const double var_t694 = 0.98999999999999999 * var_chaste_interface__INa__hf; // dimensionless
        const double var_t697 = (0.010000000000000009 * var_chaste_interface__INa__hs) + var_t694; // dimensionless
        const double var_t701 = (0.010000000000000009 * var_chaste_interface__INa__hsp) + var_t694; // dimensionless
        const double var_t704 = ((var_t664 * var_t701) * var_chaste_interface__INa__jp) + ((var_t665 * var_t697) * var_chaste_interface__INa__j); // dimensionless
        const double var_t707 = mParameters[12]; // dimensionless
        const double var_t711 = (var_t664 * var_chaste_interface__INaL__hLp) + (var_t665 * var_chaste_interface__INaL__hL); // dimensionless
        const double var_t713 = mParameters[8] * var_chaste_interface__membrane__v; // dimensionless
        const double var_t739 = mParameters[6] * var_chaste_interface__membrane__v; // dimensionless
        const double var_t751 = 0.34100000000000003 * mParameters[2]; // dimensionless
        const double var_t752 = (_lt_0_row[77] * var_chaste_interface__intracellular_ions__cai) - var_t751; // dimensionless
        const double var_t762 = mParameters[5]; // dimensionless
        const double var_t763 = var_t665 * var_t762; // dimensionless
        const double var_t771 = ((0.75 * var_chaste_interface__intracellular_ions__nass) * _lt_0_row[76]) - (0.75 * mParameters[4]); // dimensionless
        const double var_t772 = var_t771 * _lt_0_row[78]; // dimensionless
        const double var_t773 = var_t772 * var_chaste_interface__ICaL__d; // dimensionless
        const double var_t791 = var_t664 * var_t762; // dimensionless
        const double var_t806 = ((0.75 * var_chaste_interface__intracellular_ions__kss) * _lt_0_row[76]) - (0.75 * mParameters[3]); // dimensionless
        const double var_t807 = var_t806 * _lt_0_row[78]; // dimensionless
        const double var_t808 = var_t807 * var_chaste_interface__ICaL__d; // dimensionless
        const double var_t816 = (_lt_0_row[77] * var_chaste_interface__intracellular_ions__cass) - var_t751; // dimensionless
        const double var_t817 = var_t816 * _lt_0_row[81]; // dimensionless
        const double var_t818 = var_t817 * var_chaste_interface__ICaL__d; // dimensionless
        const double var_t828 = pow(mParameters[3], 0.5); // dimensionless
        const double var_t829 = mParameters[13] * var_t828; // dimensionless
        const double var_t838 = (_lt_0_row[82] * var_chaste_interface__IKr__xrf) + (_lt_0_row[83] * var_chaste_interface__IKr__xrs); // dimensionless
        const double var_t844 = var_t838 * _lt_0_row[84]; // dimensionless
        const double var_t857 = (_lt_0_row[86] * var_chaste_interface__Ito__iF) + (_lt_0_row[87] * var_chaste_interface__Ito__iS); // dimensionless
        const double var_t861 = (_lt_0_row[86] * var_chaste_interface__Ito__iFp) + (_lt_0_row[87] * var_chaste_interface__Ito__iSp); // dimensionless
        const double var_t863 = (var_t666 * var_t857) + (var_t681 * var_t861); // dimensionless
        const double var_t867 = mParameters[16]; // dimensionless
        const double var_t869 = pow(mParameters[3], 2.0); // dimensionless
        const double var_t872 = var_t869 * 7.7937924625297832; // dimensionless
        const double var_t873 = 1304992.8 * var_t872; // dimensionless
        const double var_t875 = mParameters[4] * 0.035997120230381568; // dimensionless
        const double var_t882 = var_t875 * _lt_0_row[88]; // dimensionless
        const double var_t883 = 1.0 + var_t882; // dimensionless
        const double var_t884 = pow(var_t883, 2.0); // dimensionless
        const double var_t890 = ((var_t883 * var_t884) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0; // dimensionless
        const double var_t906 = 1899.0 * var_t869; // dimensionless
        const double var_t926 = var_t180 * 4.6644804351351539e-05; // dimensionless
        const double var_t930 = 1.0 / var_t890; // dimensionless
        const double var_t931 = _lt_0_row[90] * var_t930; // dimensionless
        const double var_t932 = var_t926 * var_t931; // dimensionless
        const double var_t951 = 39.399999999999999 * var_t180; // dimensionless
        const double var_t952 = 9.120000000000001 * var_t951; // dimensionless
        const double var_t954 = var_t930 * 79300.0; // dimensionless
        const double var_t955 = _lt_0_row[92] * var_t954; // dimensionless
        const double var_t963 = (1.5889281507656066 + (var_chaste_interface__intracellular_ions__nai * 0.004464285714285714)) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752); // dimensionless
        const double var_t964 = 1.0 / var_t963; // dimensionless
        const double var_t965 = 4.2000000000000002 * var_t964; // dimensionless
        const double var_t967 = var_t965 * 1.732653031203624e-15; // dimensionless
        const double var_t978 = 949.5 * var_t426; // dimensionless
        const double var_t991 = var_chaste_interface__intracellular_ions__nai * 0.11021712774165104; // dimensionless
        const double var_t994 = (var_t991 * _lt_0_row[93]) + 1.0; // dimensionless
        const double var_t995 = pow(var_t994, 2.0); // dimensionless
        const double var_t999 = (2.0 * var_chaste_interface__intracellular_ions__ki) + 1.0; // dimensionless
        const double var_t1001 = ((var_t994 * var_t995) + pow(var_t999, 2.0)) - 1.0; // dimensionless
        const double var_t1002 = 1.0 / var_t1001; // dimensionless
        const double var_t1003 = _lt_0_row[94] * var_t1002; // dimensionless
        const double var_t1004 = var_t978 * var_t1003; // dimensionless
        const double var_t1008 = var_t1004 * 439120.79239156022; // dimensionless
        const double var_t1011 = var_t964 * 9.9999999999999995e-08; // dimensionless
        const double var_t1012 = var_t1011 * 1.732653031203624e-08; // dimensionless
        const double var_t1013 = 228878832.0 * var_t1012; // dimensionless
        const double var_t1014 = var_t1004 * var_t1013; // dimensionless
        const double var_t1015 = var_t965 * 9.9999999999999995e-08; // dimensionless
        const double var_t1016 = 54494960.0 * var_t1015; // dimensionless
        const double var_t1018 = pow(var_chaste_interface__intracellular_ions__ki, 2.0); // dimensionless
        const double var_t1021 = var_t1018 * 4.0; // dimensionless
        const double var_t1022 = var_t1021 * var_t1002; // dimensionless
        const double var_t1023 = 6.930612124814496e-07 * var_t1022; // dimensionless
        const double var_t1024 = var_t1016 * var_t1023; // dimensionless
        const double var_t1025 = var_t951 * 4.6644804351351539e-05; // dimensionless
        const double var_t1027 = var_t931 * 333060.0; // dimensionless
        const double var_t1028 = var_t1025 * var_t1027; // dimensionless
        const double var_t1029 = 40.0 * var_t1018; // dimensionless
        const double var_t1030 = 4.0 * var_t1002; // dimensionless
        const double var_t1031 = var_t1029 * var_t1030; // dimensionless
        const double var_t1033 = (var_t1028 * var_t1012) * var_t1031; // dimensionless
        const double var_t1035 = var_t872 * var_t930; // dimensionless
        const double var_t1036 = 1304992.8 * var_t1035; // dimensionless
        const double var_t1037 = var_t1004 * var_t1036; // dimensionless
        const double var_t1038 = var_t930 * 40.0; // dimensionless
        const double var_t1040 = (var_t873 * var_t1038) * var_t1022; // dimensionless
        const double var_t1041 = 7.7937924625297832 * var_t930; // dimensionless
        const double var_t1043 = (var_t906 * var_t1041) * 182.40000000000001; // dimensionless
        const double var_t1046 = (var_t1043 * 2.0) * var_t1022; // dimensionless
        const double var_t1047 = 9.120000000000001 * var_t1025; // dimensionless
        const double var_t1048 = var_t931 * 40.0; // dimensionless
        const double var_t1050 = (var_t1047 * var_t1048) * var_t1022; // dimensionless
        const double var_t1051 = var_t930 * 639.0; // dimensionless
        const double var_t1053 = (var_t873 * var_t1051) * 0.99999998267346979; // dimensionless
        const double var_t1054 = var_t1041 * 639.0; // dimensionless
        const double var_t1058 = (((var_t906 * var_t1054) * 57714958.775029451) * 3.1603591289154103e-06) * 0.050000000000000003; // dimensionless
        const double var_t1060 = _lt_0_row[92] * var_t930; // dimensionless
        const double var_t1062 = (229610.58802164512 * var_t180) * var_t1060; // dimensionless
        const double var_t1064 = var_t926 * _lt_0_row[90]; // dimensionless
        const double var_t1065 = 359.32800000000003 * var_t1064; // dimensionless
        const double var_t1066 = var_t954 * 4.2000000000000002; // dimensionless
        const double var_t1068 = (var_t1065 * var_t1066) * var_t1012; // dimensionless
        const double var_t1069 = var_t978 * 0.0013388973049288464; // dimensionless
        const double var_t1070 = _lt_0_row[95] * var_t1002; // dimensionless
        const double var_t1071 = var_t1070 * 1899.0; // dimensionless
        const double var_t1073 = var_t1035 * 638.99998892834719; // dimensionless
        const double var_t1074 = (var_t1069 * var_t1071) * var_t1073; // dimensionless
        const double var_t1075 = var_t1070 * 6262.2000000000007; // dimensionless
        const double var_t1078 = 4.0204080936055817 * var_t932; // dimensionless
        const double var_t1079 = (var_t1069 * var_t1075) * var_t1078; // dimensionless
        const double var_t1080 = var_t1070 * var_t951; // dimensionless
        const double var_t1082 = var_t955 * var_t967; // dimensionless
        const double var_t1083 = (var_t1069 * var_t1080) * var_t1082; // dimensionless
        const double var_t1084 = (((((((((((((var_t1008 + var_t1014) + var_t1024) + (2.0 * var_t1033)) + var_t1037) + var_t1040) + var_t1046) + var_t1050) + var_t1053) + var_t1058) + var_t1062) + var_t1068) + var_t1074) + var_t1079) + var_t1083; // dimensionless
        const double var_t1085 = 1.0 / var_t1084; // dimensionless
        const double var_t1091 = ((var_t1053 + var_t1058) + var_t1062) + var_t1068; // dimensionless
        const double var_t1093 = 1.0 / pow(var_t1084, 2.0); // dimensionless
        const double var_t1095 = (var_t1091 * var_t1093) * var_t978; // dimensionless
        const double var_t1113 = 1.0 / pow(var_t1001, 2.0); // dimensionless
        const double var_t1114 = _lt_0_row[96] * var_t1113; // dimensionless
        const double var_t1117 = var_t930 * var_t995; // dimensionless
        const double var_t1121 = 359.32800000000003 * var_t932; // dimensionless
        const double var_t1126 = 1.732653031203624e-08 * var_t995; // dimensionless
        const double var_t1127 = 57714958.775029451 * var_t1126; // dimensionless
        const double var_t1139 = var_t1011 * var_t1126; // dimensionless
        const double var_t1150 = 333060.0 * var_t964; // dimensionless
        const double var_t1154 = var_t1113 * var_t995; // dimensionless
        const double var_t1163 = var_t978 * _lt_0_row[94]; // dimensionless
        const double var_t1167 = var_t951 * _lt_0_row[92]; // dimensionless
        const double var_t1173 = var_t1029 * 4.0; // dimensionless
        const double var_t1190 = var_t906 * 7.7937924625297832; // dimensionless
        const double var_t1216 = var_t1113 * 639.0; // dimensionless
        const double var_t1225 = var_t1002 * 39.399999999999999; // dimensionless
        const double var_t1242 = var_t1038 * var_t1018; // dimensionless
        const double var_t1245 = 4.0 * var_t1113; // dimensionless
        const double var_t1251 = _lt_0_row[97] * var_t1113; // dimensionless
        const double var_t1287 = var_t1091 * var_t1085; // dimensionless
        const double var_t1292 = var_t1287 * 949.5; // dimensionless
        const double var_t1303 = (((var_t1074 + var_t1079) + var_t1083) + var_t1033) * var_t1093; // dimensionless
        const double var_t1312 = ((var_t1008 + var_t1014) + var_t1024) + var_t1033; // dimensionless
        const double var_t1314 = (var_t1312 * var_t1093) * 1899.0; // dimensionless
        const double var_t1328 = ((var_t1037 + var_t1040) + var_t1046) + var_t1050; // dimensionless
        const double var_t1330 = (var_t1328 * var_t1093) * 333060.0; // dimensionless
        const double var_t1339 = mParameters[7]; // dimensionless
        const double var_t1345 = var_t1339 / _lt_0_row[100]; // dimensionless
        const double var_t1352 = 0.40000000000000002 * var_chaste_interface__ICaL__fs; // dimensionless
        const double var_t1354 = 1.0 - var_chaste_interface__ICaL__nca; // dimensionless
        const double var_t1362 = _lt_0_row[102] * var_chaste_interface__ICaL__fcas; // dimensionless
        const double var_t1363 = (_lt_0_row[103] * var_chaste_interface__ICaL__fcafp) + var_t1362; // dimensionless
        const double var_t1364 = var_chaste_interface__ICaL__jca * var_t1363; // dimensionless
        const double var_t1366 = (((0.59999999999999998 * var_chaste_interface__ICaL__ffp) + var_t1352) * var_t1354) + (var_t1364 * var_chaste_interface__ICaL__nca); // dimensionless
        const double var_t1367 = var_chaste_interface__ICaL__d * var_t1366; // dimensionless
        const double var_t1379 = (_lt_0_row[103] * var_chaste_interface__ICaL__fcaf) + var_t1362; // dimensionless
        const double var_t1380 = var_chaste_interface__ICaL__jca * var_t1379; // dimensionless
        const double var_t1382 = (((0.59999999999999998 * var_chaste_interface__ICaL__ff) + var_t1352) * var_t1354) + (var_t1380 * var_chaste_interface__ICaL__nca); // dimensionless
        const double var_t1383 = var_chaste_interface__ICaL__d * var_t1382; // dimensionless
        const double var_t1393 = _lt_0_row[81] * var_chaste_interface__ICaL__d; // dimensionless
        const double var_t1394 = var_t1393 * var_t1366; // dimensionless
        const double var_t1406 = var_t1393 * var_t1382; // dimensionless
        const double var_t1416 = _lt_0_row[78] * var_chaste_interface__ICaL__d; // dimensionless
        const double var_t1417 = var_t1416 * var_t1366; // dimensionless
        const double var_t1423 = var_t1416 * var_t1382; // dimensionless
        const double var_t1443 = mParameters[14]; // dimensionless
        const double var_t1444 = 1.0 / var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t1447 = 1.0 + (6.481821026e-07 * pow(var_t1444, 1.3999999999999999)); // dimensionless
        const double var_t1451 = var_t1443 * (1.0 + (0.59999999999999998 / var_t1447)); // dimensionless
        const double var_t1453 = (var_t1451 * var_chaste_interface__IKs__xs1) * var_chaste_interface__IKs__xs2; // dimensionless
        const double var_t1457 = mParameters[11] * var_t828; // dimensionless
        const double var_t1461 = exp(((0.1053407774 * var_chaste_interface__membrane__v) + 11.145054249999999) - (0.2738860212 * mParameters[3])); // dimensionless
        const double var_t1462 = 1.0 + var_t1461; // dimensionless
        const double var_t1463 = 1.0 / var_t1462; // dimensionless
        const double var_t1465 = (var_t1457 * var_t1463) * var_chaste_interface__IK1__xk1; // dimensionless
        const double var_t1500 = 0.0032258064516129032 * var_t771; // dimensionless
        const double var_t1505 = 0.0032258064516129032 * var_t806; // dimensionless
        const double var_t1506 = var_t1505 * var_t1423; // dimensionless
        const double var_t1512 = 0.0032258064516129032 * var_t816; // dimensionless
        const double var_t1513 = var_t1512 * var_t1406; // dimensionless
        const double var_t1516 = var_t1512 * var_t1394; // dimensionless
        const double var_t1519 = var_t1500 * var_t1423; // dimensionless
        const double var_t1540 = 1.0 / var_chaste_interface__intracellular_ions__nai; // dimensionless
        const double var_t1545 = (((-log(mParameters[4] * var_t1540)) * 2577340.0) * 1.0364305332435094e-05) + var_chaste_interface__membrane__v; // dimensionless
        const double var_t1546 = mParameters[10] * var_t1545; // dimensionless
        const double var_t1548 = 1.0 / pow(var_t663, 2.0); // dimensionless
        const double var_t1549 = var_t1548 * 0.14999999999999999; // dimensionless
        const double var_t1551 = 1.0 / pow(var_t660, 2.0); // dimensionless
        const double var_t1552 = var_t1549 * var_t1551; // dimensionless
        const double var_t1554 = ((-var_t658) * 0.050000000000000003) + 1.0; // dimensionless
        const double var_t1558 = var_t1548 * var_t701; // dimensionless
        const double var_t1560 = 0.14999999999999999 * var_t1551; // dimensionless
        const double var_t1561 = var_t1560 * var_t1554; // dimensionless
        const double var_t1566 = var_t707 * var_t1545; // dimensionless
        const double var_t1567 = var_t1551 * var_t1554; // dimensionless
        const double var_t1570 = var_t1548 * var_chaste_interface__INaL__hLp; // dimensionless
        const double var_t1578 = var_t1548 * var_chaste_interface__Ito__ap; // dimensionless
        const double var_t1585 = ((var_t1552 * var_t1554) * var_t762) * var_chaste_interface__membrane__v; // dimensionless
        const double var_t1590 = var_t1548 * var_t762; // dimensionless
        const double var_t1592 = (var_t1590 * var_chaste_interface__membrane__v) * 3612.0012202503353; // dimensionless
        const double var_t1594 = (var_t1366 * 0.14999999999999999) * var_t1567; // dimensionless
        const double var_t1615 = 1.0364305332435094e-05 * var_t1540; // dimensionless
        const double var_t1626 = 1.0 / ((var_chaste_interface__intracellular_ions__nai * 0.018329999999999999) + var_chaste_interface__intracellular_ions__ki); // dimensionless
        const double var_t1627 = 1.0364305332435094e-05 * var_t1626; // dimensionless
        const double var_t1637 = ((((_lt_0_row[115] * var_t442) * 0.00012878077165026273) * var_t608) - (_lt_0_row[116] * var_t404)) + var_t594; // dimensionless
        const double var_t1639 = (5000.0 * var_t1637) * var_t440; // dimensionless
        const double var_t1640 = var_t419 * var_t432; // dimensionless
        const double var_t1645 = 1.0 / pow(var_t431, 2.0); // dimensionless
        const double var_t1646 = var_t426 * var_t1645; // dimensionless
        const double var_t1650 = (var_t427 * 0.20000000000000001) + (var_t429 * 0.066666666666666666); // dimensionless
        const double var_t1651 = var_t435 * var_t1650; // dimensionless
        const double var_t1655 = var_t455 * _lt_0_row[117]; // dimensionless
        const double var_t1661 = ((((((-var_t1645) * var_t1650) * 1500000.0) * var_chaste_interface__intracellular_ions__cai) - (((var_t1646 * var_t1651) * 0.013333333333333334) * _lt_0_row[56])) + (((3.0 * var_t1640) * var_t436) * 0.013333333333333334)) - ((_lt_0_row[118] * var_t1655) * var_t434); // dimensionless
        const double var_t1662 = var_t445 * var_t1661; // dimensionless
        const double var_t1666 = ((15000.0 * var_t419) * var_t474) * var_t482; // dimensionless
        const double var_t1673 = ((((((var_t461 * var_t1645) * 0.066666666666666666) * 0.20000000000000001) * _lt_0_row[56]) * var_t409) * var_t123) * var_t1650; // dimensionless
        const double var_t1675 = var_t123 * _lt_0_row[117]; // dimensionless
        const double var_t1677 = ((var_t475 * _lt_0_row[118]) * var_t403) * var_t1675; // dimensionless
        const double var_t1679 = ((((var_t1639 + var_t1662) + var_t1666) - var_t1673) - var_t1677) * var_t503; // dimensionless
        const double var_t1681 = var_t1640 * 0.066666666666666666; // dimensionless
        const double var_t1684 = ((3.0 * var_t170) * var_t1681) * var_t487; // dimensionless
        const double var_t1685 = var_t1646 * 0.066666666666666666; // dimensionless
        const double var_t1690 = ((((var_t170 * var_t1685) * _lt_0_row[64]) * var_t435) * var_t485) * var_t1650; // dimensionless
        const double var_t1695 = (((var_t484 * _lt_0_row[119]) * var_t455) * var_t485) * _lt_0_row[117]; // dimensionless
        const double var_t1698 = ((var_t484 * _lt_0_row[64]) * var_t435) * var_t1637; // dimensionless
        const double var_t1700 = (var_t1637 * var_t432) * var_t491; // dimensionless
        const double var_t1703 = 1500000.0 * var_t187; // dimensionless
        const double var_t1705 = (((var_t444 * var_t1645) * var_chaste_interface__intracellular_ions__cai) * var_t1703) * var_t1650; // dimensionless
        const double var_t1707 = (var_t169 * var_t191) * var_t1661; // dimensionless
        const double var_t1712 = ((((var_t197 * 12000.0) * var_t1645) * var_t490) * var_t122) * var_t1650; // dimensionless
        const double var_t1716 = (((((((((((((((var_t1637 * var_t183) * 12000.0) * var_t205) + var_t1639) + var_t1662) + var_t1666) - var_t1673) - var_t1677) + var_t1684) - var_t1690) - var_t1695) + var_t1698) + var_t1700) - var_t1705) + var_t1707) - var_t1712; // dimensionless
        const double var_t1720 = (((((var_t1684 - var_t1690) - var_t1695) + var_t1698) + var_t1700) - var_t1705) * var_t503; // dimensionless
        const double var_t1735 = 5000.0 * var_t1716; // dimensionless
        const double var_t1754 = ((var_t202 * 0.00012878077165026273) * var_t195) * 0.0044444444444444444; // dimensionless
        const double var_t1777 = var_t625 * var_t446; // dimensionless
        const double var_t1783 = ((((((var_t1716 * var_t220) * var_t510) - ((var_t1716 * var_t557) * 5000.0)) - (var_t1679 * var_t170)) + (var_t1720 * 5000.0)) * 2.0) + (((((((((((((((( -3.0 * var_t1679) * var_t194) * var_t300) + ((((3.0 * var_t565) * var_t196) * 12000.0) * var_t1716)) - ((var_t1720 * mParameters[4]) * var_t323)) + ((var_t581 * var_t119) * var_t1735)) + ((((var_t1707 - var_t1712) * var_t503) * var_chaste_interface__intracellular_ions__nai) * var_t594)) - ((var_t598 * var_t415) * var_t1735)) + ((var_t601 * _lt_0_row[57]) * var_t416)) - (((var_t601 * var_t442) * var_t421) * _lt_0_row[120])) + (((((((3.0 * var_t1754) * 144000000.0) * var_t1637) * var_t503) * var_t426) * var_t432) * var_t409)) - ((((3.0 * var_t620) * _lt_0_row[64]) * var_t435) * var_t1716)) + (((9.0 * var_t625) * var_t1681) * var_t615)) - ((((3.0 * var_t625) * var_t1685) * _lt_0_row[64]) * var_t1651)) - (((3.0 * var_t1777) * _lt_0_row[119]) * var_t1655)) * 1.0); // dimensionless
        const double var_t1787 = (var_t952 * _lt_0_row[92]) * var_t1066; // dimensionless
        const double var_t1789 = 1.0 / pow(var_t963, 2.0); // dimensionless
        const double var_t1790 = var_t1789 * 9.9999999999999995e-08; // dimensionless
        const double var_t1797 = 949.5 * var_t419; // dimensionless
        const double var_t1798 = var_t1797 * var_t1003; // dimensionless
        const double var_t1800 = (3.0 * var_t1798) * 439120.79239156022; // dimensionless
        const double var_t1801 = var_t978 * var_t1251; // dimensionless
        const double var_t1806 = ((((3.0 * var_t1801) * 439120.80000000005) * 9.8000000000000007) * 0.10204081455851731) * var_t995; // dimensionless
        const double var_t1808 = (3.0 * var_t1798) * var_t1013; // dimensionless
        const double var_t1809 = var_t978 * 0.000147569415290295; // dimensionless
        const double var_t1815 = (((((3.0 * var_t1809) * var_t1114) * 687.20000000000005) * var_t1150) * 1.732653031203624e-15) * var_t995; // dimensionless
        const double var_t1817 = (var_t1069 * var_t1070) * 687.20000000000005; // dimensionless
        const double var_t1818 = 333060.0 * var_t1789; // dimensionless
        const double var_t1821 = ((var_t1817 * var_t1818) * 1.732653031203624e-15) * 0.004464285714285714; // dimensionless
        const double var_t1824 = (228878832.0 * var_t1789) * 9.9999999999999995e-08; // dimensionless
        const double var_t1825 = 6.930612124814496e-07 * var_t1018; // dimensionless
        const double var_t1828 = ((var_t1824 * var_t1825) * var_t1030) * 0.004464285714285714; // dimensionless
        const double var_t1830 = (var_t1173 * var_t1154) * _lt_0_row[98]; // dimensionless
        const double var_t1832 = (3.0 * var_t1013) * var_t1830; // dimensionless
        const double var_t1833 = var_t1790 * 6.930612124814496e-07; // dimensionless
        const double var_t1837 = (((var_t1028 * var_t1833) * var_t1021) * var_t1002) * 0.004464285714285714; // dimensionless
        const double var_t1843 = (var_t995 * 0.11021712774165104) * _lt_0_row[93]; // dimensionless
        const double var_t1846 = (((((var_t1167 * var_t954) * var_t965) * 1.732653031203624e-15) * var_t1029) * var_t1245) * var_t1843; // dimensionless
        const double var_t1848 = var_t1798 * var_t1036; // dimensionless
        const double var_t1850 = 1304992.8 * var_t869; // dimensionless
        const double var_t1853 = ((var_t1801 * var_t1850) * var_t1041) * var_t995; // dimensionless
        const double var_t1860 = ((((var_t1850 * var_t1041) * 40.0) * var_t1021) * var_t1113) * var_t1843; // dimensionless
        const double var_t1865 = (((var_t1190 * var_t930) * 182.40000000000001) * 0.050000000000000003) * var_t1830; // dimensionless
        const double var_t1867 = var_t1121 * var_t1830; // dimensionless
        const double var_t1869 = var_t1790 * 7.7350581750161776e-11; // dimensionless
        const double var_t1872 = var_t1797 * 0.0013388973049288464; // dimensionless
        const double var_t1875 = ((3.0 * var_t1872) * var_t1071) * var_t1073; // dimensionless
        const double var_t1880 = ((((3.0 * var_t1809) * var_t1114) * var_t906) * var_t1054) * var_t1127; // dimensionless
        const double var_t1883 = ((3.0 * var_t1872) * var_t1075) * var_t1078; // dimensionless
        const double var_t1890 = ((((((3.0 * var_t1809) * var_t1114) * 6262.2000000000007) * 0.10204081455851731) * var_t951) * _lt_0_row[92]) * var_t1117; // dimensionless
        const double var_t1893 = ((3.0 * var_t1872) * var_t1080) * var_t1082; // dimensionless
        const double var_t1896 = (var_t1113 * 39.399999999999999) * var_t926; // dimensionless
        const double var_t1900 = ((((3.0 * var_t978) * _lt_0_row[97]) * var_t1896) * var_t1027) * var_t1139; // dimensionless
        const double var_t1902 = (var_t1163 * var_t1225) * var_t926; // dimensionless
        const double var_t1904 = (var_t1902 * var_t1027) * var_t1869; // dimensionless
        const double var_t1906 = ((((((((((var_t1800 - var_t1806) + var_t1808) - var_t1815) - var_t1821) - var_t1828) - var_t1832) - (2.0 * var_t1837)) - (6.0 * var_t1846)) + (3.0 * var_t1848)) - (3.0 * var_t1853)) + (((((((((((((-var_t1065) * var_t1066) * var_t1869) - (3.0 * var_t1860)) - (3.0 * var_t1865)) - (3.0 * var_t1867)) + var_t1875) - var_t1880) + var_t1883) - var_t1890) + var_t1893) - var_t1900) - var_t1904); // dimensionless
        const double var_t1915 = var_t1287 * var_t978; // dimensionless
        const double var_t1919 = 3.0 * var_t1846; // dimensionless
        const double var_t1944 = (var_t1328 * var_t1085) * 333060.0; // dimensionless
        const double var_t1949 = var_t867 * ((((((((((((2.0 * var_t1787) * var_t1790) * 7.7350581750161776e-11) * var_t1085) * var_t1004) + ((((2.0 * var_t1095) * _lt_0_row[94]) * var_t1002) * var_t1906)) - ((((6.0 * var_t1292) * var_t419) * 0.0013388973049288464) * var_t1070)) + (((6.0 * var_t1915) * _lt_0_row[97]) * var_t1154)) + (((2.0 * ((((((((var_t1875 - var_t1880) + var_t1883) - var_t1890) + var_t1893) - var_t1900) - var_t1904) - var_t1837) - var_t1919)) * var_t1085) * 9.120000000000001)) - (((2.0 * var_t1303) * 9.120000000000001) * var_t1906)) * 1.0) + (3.0 * (((((((((((((((var_t1800 - var_t1806) + var_t1808) - var_t1815) - var_t1821) - var_t1828) - var_t1832) - var_t1837) - var_t1919) * var_t1085) * 1899.0) * var_t1035) - (((var_t1314 * var_t872) * var_t930) * var_t1906)) - ((((3.0 * ((((var_t1848 - var_t1853) - var_t1860) - var_t1865) - var_t1867)) * var_t1085) * 79300.0) * var_t967)) + (((var_t1330 * var_t1011) * 1.732653031203624e-08) * var_t1906)) + (var_t1944 * var_t1869)))); // dimensionless
        const double var_t1956 = var_t763 * ((var_chaste_interface__membrane__v * 9309355225.0) * 0.00012027904738994468); // dimensionless
        const double var_t1959 = (var_t1956 * _lt_0_row[121]) * var_t1423; // dimensionless
        const double var_t1961 = var_t791 * ((var_chaste_interface__membrane__v * 9309355225.0) * 0.00012027904738994468); // dimensionless
        const double var_t1963 = (var_t1961 * _lt_0_row[121]) * var_t1417; // dimensionless
        const double var_t1969 = ((((_lt_0_row[115] * var_t359) * 0.00012878077165026273) * var_t85) - (_lt_0_row[116] * var_t27)) + var_t345; // dimensionless
        const double var_t1971 = (5000.0 * var_t1969) * var_t83; // dimensionless
        const double var_t1972 = var_t53 * var_t73; // dimensionless
        const double var_t1977 = 1.0 / pow(var_t72, 2.0); // dimensionless
        const double var_t1978 = var_t65 * var_t1977; // dimensionless
        const double var_t1982 = (0.066666666666666666 * var_t70) + (var_t67 * 0.20000000000000001); // dimensionless
        const double var_t1983 = var_t78 * var_t1982; // dimensionless
        const double var_t1986 = var_t102 * _lt_0_row[117]; // dimensionless
        const double var_t1992 = ((((((-var_t1977) * var_t1982) * 1500000.0) * var_chaste_interface__intracellular_ions__cass) - (((var_t1978 * var_t1983) * 0.013333333333333334) * _lt_0_row[56])) - ((_lt_0_row[118] * var_t1986) * var_t76)) + (((3.0 * var_t1972) * 0.013333333333333334) * var_t79); // dimensionless
        const double var_t1993 = var_t88 * var_t1992; // dimensionless
        const double var_t1997 = ((15000.0 * var_t53) * var_t137) * var_t161; // dimensionless
        const double var_t2004 = ((((((var_t108 * var_t1977) * 0.066666666666666666) * 0.20000000000000001) * _lt_0_row[56]) * var_t40) * var_t123) * var_t1982; // dimensionless
        const double var_t2007 = ((var_t138 * _lt_0_row[118]) * var_t26) * var_t1675; // dimensionless
        const double var_t2009 = ((((var_t1971 + var_t1993) + var_t1997) - var_t2004) - var_t2007) * var_t212; // dimensionless
        const double var_t2011 = var_t1972 * 0.066666666666666666; // dimensionless
        const double var_t2014 = ((3.0 * var_t170) * var_t2011) * var_t176; // dimensionless
        const double var_t2015 = var_t1978 * 0.066666666666666666; // dimensionless
        const double var_t2020 = ((((var_t170 * var_t2015) * _lt_0_row[64]) * var_t78) * var_t174) * var_t1982; // dimensionless
        const double var_t2024 = (((var_t171 * _lt_0_row[119]) * var_t102) * var_t174) * _lt_0_row[117]; // dimensionless
        const double var_t2027 = ((var_t171 * _lt_0_row[64]) * var_t78) * var_t1969; // dimensionless
        const double var_t2029 = (var_t1969 * var_t73) * var_t188; // dimensionless
        const double var_t2033 = (((var_t87 * var_t1977) * var_chaste_interface__intracellular_ions__cass) * var_t1703) * var_t1982; // dimensionless
        const double var_t2035 = (var_t169 * var_t191) * var_t1992; // dimensionless
        const double var_t2040 = ((((var_t197 * 12000.0) * var_t1977) * var_t179) * var_t122) * var_t1982; // dimensionless
        const double var_t2044 = (((((((((((((((var_t183 * 12000.0) * var_t1969) * var_t205) + var_t1971) + var_t1993) + var_t1997) - var_t2004) - var_t2007) + var_t2014) - var_t2020) - var_t2024) + var_t2027) + var_t2029) - var_t2033) + var_t2035) - var_t2040; // dimensionless
        const double var_t2048 = (((((var_t2014 - var_t2020) - var_t2024) + var_t2027) + var_t2029) - var_t2033) * var_t212; // dimensionless
        const double var_t2063 = 5000.0 * var_t2044; // dimensionless
        const double var_t2095 = var_t376 * var_t89; // dimensionless
        const double var_t2101 = ((((((var_t2044 * var_t219) * var_t220) - ((var_t2044 * var_t293) * 5000.0)) - (var_t170 * var_t2009)) + (var_t2048 * 5000.0)) * 2.0) + (((((((((((((((( -3.0 * var_t2009) * var_t194) * var_t300) + ((((3.0 * var_t303) * var_t196) * 12000.0) * var_t2044)) - ((var_t2048 * mParameters[4]) * var_t323)) + ((var_t325 * var_t119) * var_t2063)) + ((((var_t2035 - var_t2040) * var_t212) * var_chaste_interface__intracellular_ions__nass) * var_t345)) - ((var_t349 * var_t49) * var_t2063)) + ((var_t352 * _lt_0_row[57]) * var_t50)) - (((var_t352 * var_t85) * var_t58) * _lt_0_row[120])) + (((((((3.0 * var_t1754) * 144000000.0) * var_t1969) * var_t212) * var_t65) * var_t73) * var_t40)) - ((((3.0 * var_t371) * _lt_0_row[64]) * var_t78) * var_t2044)) + (((9.0 * var_t376) * var_t2011) * var_t366)) - ((((3.0 * var_t376) * var_t2015) * _lt_0_row[64]) * var_t1983)) - (((3.0 * var_t2095) * _lt_0_row[119]) * var_t1986)) * 1.0); // dimensionless
        const double var_t2107 = 1.0364305332435094e-05 * var_t646; // dimensionless
        const double var_t2113 = 0.003212934653054879 * var_t646; // dimensionless
        const double var_t2127 = _lt_0_row[95] * var_t1113; // dimensionless
        const double var_t2129 = (var_t1069 * var_t2127) * 687.20000000000005; // dimensionless
        const double var_t2131 = (1.732653031203624e-08 * var_t999) * 2.0; // dimensionless
        const double var_t2134 = ((2.0 * var_t2129) * 36879858657.24382) * var_t2131; // dimensionless
        const double var_t2135 = var_t999 * 2.0; // dimensionless
        const double var_t2139 = (((2.0 * var_t2129) * var_t1150) * 1.732653031203624e-15) * var_t2135; // dimensionless
        const double var_t2142 = ((var_t1817 * var_t1818) * 1.732653031203624e-15) * 0.0034246575342465752; // dimensionless
        const double var_t2145 = ((var_t1824 * var_t1825) * var_t1030) * 0.0034246575342465752; // dimensionless
        const double var_t2147 = (var_chaste_interface__intracellular_ions__ki * 4.0) * var_t1002; // dimensionless
        const double var_t2150 = ((2.0 * var_t1016) * 6.930612124814496e-07) * var_t2147; // dimensionless
        const double var_t2154 = (8.0 * var_t1113) * var_t999; // dimensionless
        const double var_t2157 = ((2.0 * var_t1016) * var_t1825) * var_t2154; // dimensionless
        const double var_t2161 = (((var_t1028 * var_t1833) * var_t1021) * var_t1002) * 0.0034246575342465752; // dimensionless
        const double var_t2166 = (((var_t1028 * var_t1012) * 40.0) * var_chaste_interface__intracellular_ions__ki) * var_t1030; // dimensionless
        const double var_t2170 = var_t1113 * var_t999; // dimensionless
        const double var_t2173 = ((((var_t1028 * var_t1011) * 6.930612124814496e-07) * var_t1018) * 8.0) * var_t2170; // dimensionless
        const double var_t2178 = (((var_t2129 * var_t1190) * var_t930) * var_t999) * 2.0; // dimensionless
        const double var_t2182 = (var_t873 * var_t1038) * var_t2147; // dimensionless
        const double var_t2185 = (var_t1036 * var_t1029) * var_t2154; // dimensionless
        const double var_t2188 = (var_t1043 * 2.0) * var_t2147; // dimensionless
        const double var_t2192 = ((var_t1043 * 2.0) * var_t1018) * var_t2154; // dimensionless
        const double var_t2195 = (var_t1047 * var_t1048) * var_t2147; // dimensionless
        const double var_t2198 = (var_t1065 * var_t1242) * var_t2154; // dimensionless
        const double var_t2200 = var_t1790 * 5.9337432575466569e-11; // dimensionless
        const double var_t2209 = ((((((2.0 * var_t1069) * var_t2127) * var_t906) * var_t1041) * 6262.2000000000007) * 0.10204081455851731) * var_t2135; // dimensionless
        const double var_t2217 = (((((((2.0 * var_t1163) * var_t1216) * 57714958.775029451) * 1.732653031203624e-08) * 39.399999999999999) * var_t926) * var_t931) * var_t2135; // dimensionless
        const double var_t2222 = ((((2.0 * var_t1163) * var_t1896) * var_t1027) * var_t1011) * var_t2131; // dimensionless
        const double var_t2224 = (var_t1902 * var_t1027) * var_t2200; // dimensionless
        const double var_t2226 = ((((((((((-var_t2134) - var_t2139) - var_t2142) - var_t2145) + var_t2150) - var_t2157) - (2.0 * var_t2161)) + (4.0 * var_t2166)) - (4.0 * var_t2173)) - (2.0 * var_t2178)) + (((((((((((((-var_t1065) * var_t1066) * var_t2200) + (2.0 * var_t2182)) - (2.0 * var_t2185)) + (2.0 * var_t2188)) - (2.0 * var_t2192)) + (2.0 * var_t2195)) - (2.0 * var_t2198)) - var_t2209) - var_t2217) - var_t2222) - var_t2224); // dimensionless
        const double var_t2235 = 2.0 * var_t2166; // dimensionless
        const double var_t2236 = 2.0 * var_t2173; // dimensionless
        const double var_t2264 = var_t867 * (((((((((((2.0 * var_t1787) * var_t1790) * 5.9337432575466569e-11) * var_t1085) * var_t1004) + ((((2.0 * var_t1095) * _lt_0_row[94]) * var_t1002) * var_t2226)) + ((((4.0 * var_t1915) * _lt_0_row[94]) * var_t2170) * 2.0)) + (((2.0 * (((((((-var_t2209) - var_t2217) - var_t2222) - var_t2224) - var_t2161) + var_t2235) - var_t2236)) * var_t1085) * 9.120000000000001)) - (((2.0 * var_t1303) * 9.120000000000001) * var_t2226)) * 1.0) + (3.0 * ((((((((((((((((-var_t2134) - var_t2139) - var_t2142) - var_t2145) + var_t2150) - var_t2157) - var_t2161) + var_t2235) - var_t2236) * var_t1085) * 1899.0) * var_t1035) - (((var_t1314 * var_t872) * var_t930) * var_t2226)) - ((((2.0 * (((((((-var_t2178) + var_t2182) - var_t2185) + var_t2188) - var_t2192) + var_t2195) - var_t2198)) * var_t1085) * 79300.0) * var_t967)) + (((var_t1330 * var_t1011) * 1.732653031203624e-08) * var_t2226)) + (var_t1944 * var_t2200)))); // dimensionless
        const double var_t2271 = var_t1551 * 0.050000000000000003; // dimensionless
        const double var_t2272 = var_t2271 * var_t653; // dimensionless
        const double var_t2273 = var_t1549 * var_t2272; // dimensionless
        const double var_t2274 = pow(var_t657, 2.0); // dimensionless
        const double var_t2275 = 1.0 / var_t2274; // dimensionless
        const double var_t2276 = var_t2275 * 0.0015; // dimensionless
        const double var_t2284 = var_t2276 * var_t8; // dimensionless
        const double var_t2285 = var_t654 * var_t2284; // dimensionless
        const double var_t2289 = (var_t1546 * var_t692) * (((((var_t1551 * var_t1558) * var_t2285) * var_chaste_interface__INa__jp) * 0.14999999999999999) - ((((var_t2273 * var_t2276) * var_t697) * var_t8) * var_chaste_interface__INa__j)); // dimensionless
        const double var_t2290 = var_t1549 * var_t2271; // dimensionless
        const double var_t2291 = var_t653 * var_t2275; // dimensionless
        const double var_t2292 = 0.0015 * var_t8; // dimensionless
        const double var_t2300 = (var_t1566 * var_chaste_interface__INaL__mL) * (((((-var_t2290) * var_t2291) * var_t2292) * var_chaste_interface__INaL__hL) + ((var_t1560 * var_t1570) * var_t2285)); // dimensionless
        const double var_t2309 = ((((var_t1551 * var_t1578) * var_t2285) * var_t861) * 0.14999999999999999) - ((((var_t2273 * var_t2276) * var_t8) * var_t857) * var_chaste_interface__Ito__a); // dimensionless
        const double var_t2312 = (var_t2290 * var_t2291) * var_t2292; // dimensionless
        const double var_t2314 = (var_t762 * var_chaste_interface__membrane__v) * 1119720.378277604; // dimensionless
        const double var_t2317 = ((4.0 * var_t2312) * var_t2314) * var_t1513; // dimensionless
        const double var_t2321 = ((4.0 * var_t1956) * _lt_0_row[122]) * var_t1406; // dimensionless
        const double var_t2322 = var_t1590 * (var_chaste_interface__membrane__v * 9309355225.0); // dimensionless
        const double var_t2326 = (var_t1367 * var_t1560) * var_t2285; // dimensionless
        const double var_t2328 = (((4.4000000000000004 * var_t2322) * 3.8799692706433766e-07) * var_t817) * var_t2326; // dimensionless
        const double var_t2331 = ((4.4000000000000004 * var_t1961) * _lt_0_row[122]) * var_t1394; // dimensionless
        const double var_t2334 = ((0.00125 * var_t2312) * var_t2314) * var_t1519; // dimensionless
        const double var_t2338 = ((0.0013749999999999999 * var_t2322) * (3.8799692706433766e-07 * var_t772)) * var_t2326; // dimensionless
        const double var_t2340 = (var_t2312 * var_t2314) * var_t1506; // dimensionless
        const double var_t2345 = ((0.00039313999999999999 * var_t2322) * (3.8799692706433766e-07 * var_t807)) * var_t2326; // dimensionless
        const double var_t2364 = ((((-var_t170) * var_t308) + (var_t329 * 5000.0)) * 2.0) + ((((((( -3.0 * var_t194) * var_t300) * var_t308) - ((var_t323 * var_t329) * mParameters[4])) + ((var_t345 * var_t352) * var_chaste_interface__intracellular_ions__nass)) + ((3.0 * var_t2095) * var_t366)) * 1.0); // dimensionless
        const double var_t2369 = ((((var_t5 / pow(var_t10, 2.0)) * var_t2364) * 2.2499999999999996e-08) / var_t7) / var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_t2371 = var_t88 * var_t73; // dimensionless
        const double var_t2376 = var_t73 * 1500000.0; // dimensionless
        const double var_t2379 = 2250000000000.0 * var_t190; // dimensionless
        const double var_t2381 = (var_t169 * var_t2379) * var_t73; // dimensionless
        const double var_t2383 = (var_t181 * var_t119) * var_t168; // dimensionless
        const double var_t2386 = ((var_t2383 * 800.0) * var_t2376) * var_t122; // dimensionless
        const double var_t2387 = (((var_t1703 * var_t178) + (var_t2376 * var_t88)) + var_t2381) + var_t2386; // dimensionless
        const double var_t2401 = var_t204 * var_t185; // dimensionless
        const double var_t2411 = 5000.0 * var_t2387; // dimensionless
        const double var_t2427 = var_t12 * (((((((((var_t178 * var_t187) * var_t212) * 5000.0) * 1500000.0) - (((var_t169 * var_t212) * var_t2371) * 2250000000000.0)) + ((var_t219 * var_t220) * var_t2387)) - ((var_t2387 * var_t293) * 5000.0)) * 2.0) + (((((((((((( -3.0 * var_t2371) * 1500000.0) * var_t212) * var_t180) * var_t2401) + ((((3.0 * var_t303) * var_t196) * 12000.0) * var_t2387)) - (((var_t178 * var_t1703) * var_t212) * var_t121)) + ((var_t325 * var_t119) * var_t2411)) + ((((var_t2381 + var_t2386) * var_t212) * var_chaste_interface__intracellular_ions__nass) * var_t345)) - ((var_t349 * var_t49) * var_t2411)) - ((((3.0 * var_t371) * _lt_0_row[64]) * var_t78) * var_t2387)) * 1.0)); // dimensionless
        const double var_t2442 = (((-log(((mParameters[4] * 0.018329999999999999) + mParameters[3]) * var_t1626)) * 2577340.0) * 1.0364305332435094e-05) + var_chaste_interface__membrane__v; // dimensionless
        const double var_t2465 = ((((-var_t170) * var_t570) + (var_t585 * 5000.0)) * 2.0) + ((((((( -3.0 * var_t194) * var_t300) * var_t570) - ((var_t323 * var_t585) * mParameters[4])) + ((var_t594 * var_t601) * var_chaste_interface__intracellular_ions__nai)) + ((3.0 * var_t1777) * var_t615)) * 1.0); // dimensionless
        const double var_t2470 = ((((var_t5 / pow(var_t396, 2.0)) * var_t2465) * 2.2499999999999996e-08) / var_t393) / var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t2472 = var_t445 * var_t432; // dimensionless
        const double var_t2476 = var_t432 * 1500000.0; // dimensionless
        const double var_t2480 = (var_t169 * var_t2379) * var_t432; // dimensionless
        const double var_t2483 = ((var_t2383 * 800.0) * var_t2476) * var_t122; // dimensionless
        const double var_t2484 = (((var_t1703 * var_t489) + (var_t2476 * var_t445)) + var_t2480) + var_t2483; // dimensionless
        const double var_t2507 = 5000.0 * var_t2484; // dimensionless
        const double var_t2523 = var_t398 * (((((((((var_t187 * var_t489) * var_t503) * 5000.0) * 1500000.0) - (((var_t169 * 2250000000000.0) * var_t2472) * var_t503)) + ((var_t220 * var_t2484) * var_t510)) - ((var_t2484 * var_t557) * 5000.0)) * 2.0) + (((((((((((( -3.0 * var_t2472) * 1500000.0) * var_t503) * var_t180) * var_t2401) + ((((3.0 * var_t565) * var_t196) * 12000.0) * var_t2484)) - (((var_t489 * var_t1703) * var_t503) * var_t121)) + ((var_t581 * var_t119) * var_t2507)) + ((((var_t2480 + var_t2483) * var_t503) * var_chaste_interface__intracellular_ions__nai) * var_t594)) - ((var_t598 * var_t415) * var_t2507)) - ((((3.0 * var_t620) * _lt_0_row[64]) * var_t435) * var_t2484)) * 1.0)); // dimensionless
        const double var_t2525 = 0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t2526 = 1.0 / var_t2525; // dimensionless
        const double var_t2528 = mParameters[9] * var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t2532 = var_t739 * 9309355225.0; // dimensionless
        const double var_t2709 = (( -0.59999999999999998 * var_chaste_interface__ICaL__ff) - var_t1352) + var_t1380; // dimensionless
        const double var_t2715 = (( -0.59999999999999998 * var_chaste_interface__ICaL__ffp) - var_t1352) + var_t1364; // dimensionless
        const double var_t2720 = var_t1416 * var_t2709; // dimensionless
        const double var_t2724 = var_t1416 * var_t2715; // dimensionless
        const double var_t3053 = 0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_t3054 = pow(var_t3053, 2.0); // dimensionless
        const double var_t3058 = 0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass; // dimensionless
        const double var_t3059 = pow(var_t3058, 2.0); // dimensionless
        const double var_t3062 = (1.0 + (4.0890000000000003e-05 / var_t3054)) + (0.0097788000000000007 / var_t3059); // dimensionless
        const double var_t3063 = 1.0 / var_t3062; // dimensionless
        const double var_t3070 = ((((4.0 * var_t1585) * 3612.0012202503353) * var_t817) * var_t1383) - (((4.4000000000000004 * var_t1592) * var_t818) * var_t1594); // dimensionless
        const double var_t3077 = var_t1548 * var_chaste_interface__ryr__Jrelp; // dimensionless
        const double var_t3079 = (((-var_t1549) * var_t1567) * var_chaste_interface__ryr__Jrelnp) + (var_t1561 * var_t3077); // dimensionless
        const double var_t3092 = (4.0 * var_t1956) * var_t1513; // dimensionless
        const double var_t3094 = (4.4000000000000004 * var_t1961) * var_t1516; // dimensionless
        const double var_t3105 = mParameters[0] * ((var_t664 * var_chaste_interface__ryr__Jrelp) + (var_t665 * var_chaste_interface__ryr__Jrelnp)); // dimensionless
        const double var_t3131 = ((((-var_t2290) * var_t2291) * var_t2292) * var_chaste_interface__ryr__Jrelnp) + ((var_t1560 * var_t2285) * var_t3077); // dimensionless
        const double var_t3186 = (-((((4.0 * var_t1956) * var_t1512) * var_t1393) * var_t2709)) - ((((4.4000000000000004 * var_t1961) * var_t1512) * var_t1393) * var_t2715); // dimensionless
        const double var_t3191 = var_t3063 * mParameters[0]; // dimensionless
        const double var_t3198 = var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003; // dimensionless
        const double var_t3199 = 1.0 / var_t3198; // dimensionless
        const double var_t3200 = var_chaste_interface__intracellular_ions__cai * var_t3199; // dimensionless
        const double var_t3204 = var_t1548 * 1.0; // dimensionless
        const double var_t3206 = var_chaste_interface__intracellular_ions__cai + 0.00075000000000000002; // dimensionless
        const double var_t3207 = 1.0 / var_t3206; // dimensionless
        const double var_t3212 = (((( -0.0043750000000000004 * var_t1552) * var_t1554) * 1.0) * var_t3200) + (((((0.01203125 * var_t3204) * var_chaste_interface__intracellular_ions__cai) * var_t3207) * 0.14999999999999999) * var_t1567); // dimensionless
        const double var_t3219 = var_chaste_interface__intracellular_ions__cai * var_t3207; // dimensionless
        const double var_t3226 = mParameters[1] * (((((( -0.0043750000000000004 * var_t2273) * var_t2284) * 1.0) * var_chaste_interface__intracellular_ions__cai) * var_t3199) + (((((0.01203125 * var_t3204) * var_t3219) * 0.14999999999999999) * var_t2272) * var_t2284)); // dimensionless
        const double var_t3229 = var_t665 * 1.0; // dimensionless
        const double var_t3237 = var_t664 * 1.0; // dimensionless
        const double var_t3246 = mParameters[1] * (((((0.0043750000000000004 * var_t3229) * var_t3199) - (((0.0043750000000000004 * var_t3229) * var_chaste_interface__intracellular_ions__cai) / pow(var_t3198, 2.0))) + ((0.01203125 * var_t3237) * var_t3207)) - (((0.01203125 * var_t3237) * var_chaste_interface__intracellular_ions__cai) / pow(var_t3206, 2.0))); // dimensionless
        const double var_t3248 = 0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr; // dimensionless
        const double var_t3249 = pow(var_t3248, 2.0); // dimensionless
        const double var_t3252 = 1.0 + (8.0 / var_t3249); // dimensionless
        const double var_t3253 = 1.0 / var_t3252; // dimensionless
        const double var_t3254 = var_t3253 * mParameters[0]; // dimensionless
        const double var_t3257 = 0.01 * var_t3253; // dimensionless
        const double var_t3275 = 0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t3276 = pow(var_t3275, 2.0); // dimensionless
        const double var_t3280 = 0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai; // dimensionless
        const double var_t3281 = pow(var_t3280, 2.0); // dimensionless
        const double var_t3284 = (1.0 + (0.00011900000000000002 / var_t3276)) + (3.5000000000000004e-05 / var_t3281); // dimensionless
        const double var_t3285 = 1.0 / var_t3284; // dimensionless
        const double var_t3292 = var_t3285 * mParameters[1]; // dimensionless
        const double var_t3893 = (var_t655 * 0.002) + 1.0; // dimensionless
        const double var_t3894 = pow(var_t3893, 2.0); // dimensionless
        const double var_t4055 = pow(var_chaste_interface__intracellular_ions__cajsr, 2.0); // dimensionless
        const double var_t4057 = pow(pow(var_t4055, 2.0), 2.0); // dimensionless
        const double var_t4060 = 1.0 + (25.62890625 / var_t4057); // dimensionless
        const double var_t4061 = 1.0 / var_t4060; // dimensionless
        const double var_t4066 = 1.0 / var_chaste_interface__intracellular_ions__cajsr; // dimensionless
        const double var_t4070 = 4.75 / (1.0 + (0.0123 * var_t4066)); // dimensionless
        const double var_t4072 = (var_t4070 < 0.001) ? 0.001 : var_t4070; // dimensionless
        const double var_t4073 = 1.0 / var_t4072; // dimensionless
        const double var_t4076 = ( -4.75 * var_t3070) * var_t4061; // dimensionless
        const double var_t4083 = (4.75 * ((((-var_t2317) + var_t2321) + var_t2328) + var_t2331)) * var_t4061; // dimensionless
        const double var_t4089 = 4.75 * (var_t3092 + var_t3094); // dimensionless
        const double var_t4095 = ((var_t4089 / pow(var_t4060, 2.0)) / var_t4057) / var_chaste_interface__intracellular_ions__cajsr; // dimensionless
        const double var_t4100 = var_t4089 * var_t4061; // dimensionless
        const double var_t4114 = (4.75 / pow(1.0 + (0.0123 * var_t4066), 2.0)) / var_t4055; // dimensionless
        const double var_t4177 = ( -4.75 * var_t3186) * var_t4061; // dimensionless
        const double var_t4185 = 1.25 * var_t4070; // dimensionless
        const double var_t4187 = (var_t4185 < 0.001) ? 0.001 : var_t4185; // dimensionless
        const double var_t4188 = 1.0 / var_t4187; // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_chaste_interface__environment__dt * (((((var_t1554 * 0.0025000000000000005) * var_t653) * var_t658) - ((0.0025000000000000005 * var_t658) * var_t660)) - 0.00068000000000000005));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = -(var_chaste_interface__environment__dt * (((((0.0025000000000000005 * var_t653) * var_t2275) * var_t660) * var_t2292) + (((((0.00012500000000000003 * pow(var_t653, 2.0)) / var_t2274) / var_t657) * 0.0015) * var_t8)));
        rJacobian[0][6] = 0.0;
        rJacobian[0][7] = 0.0;
        rJacobian[0][8] = 0.0;
        rJacobian[0][9] = 0.0;
        rJacobian[0][10] = 0.0;
        rJacobian[0][11] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = 1.0 - (var_chaste_interface__environment__dt * (-var_chaste_interface__ICaL__jca));
        rJacobian[1][2] = 0.0;
        rJacobian[1][3] = 0.0;
        rJacobian[1][4] = 0.0;
        rJacobian[1][5] = -(var_chaste_interface__environment__dt * ((((((4.0 * (1.0 / pow((1000.0 / var_chaste_interface__ICaL__jca) + pow(var_t3894, 2.0), 2.0))) * 1000.0) * var_t3894) * var_t3893) * 0.002) * var_t8));
        rJacobian[1][6] = 0.0;
        rJacobian[1][7] = 0.0;
        rJacobian[1][8] = 0.0;
        rJacobian[1][9] = 0.0;
        rJacobian[1][10] = 0.0;
        rJacobian[1][11] = 0.0;
        rJacobian[2][0] = -(var_chaste_interface__environment__dt * (( -0.081176470589999994 * var_t3292) * var_t3212));
        rJacobian[2][1] = 0.0;
        rJacobian[2][2] = 1.0 - (var_chaste_interface__environment__dt * (((( -2.0 / pow(var_t3284, 2.0)) * (((((((0.0002341701012 * ((((-var_t2528) * var_t2526) - ((((4.0 * var_t2532) * 3.8799692706433766e-07) * var_t752) * _lt_0_row[81])) + ((1.6000000000000001 * var_t398) * var_t2465))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) - ((0.081176470589999994 * mParameters[1]) * ((((0.0043750000000000004 * var_t3229) * var_t3200) + ((0.01203125 * var_t3237) * var_t3219)) - (0.00026249999999999998 * var_chaste_interface__intracellular_ions__cansr)))) + (0.1470588236 * var_chaste_interface__intracellular_ions__cass)) - (0.1470588236 * var_chaste_interface__intracellular_ions__cai))) * ((( -0.00011900000000000002 / var_t3276) / var_t3275) - ((3.5000000000000004e-05 / var_t3281) / var_t3280))) + (var_t3285 * ((((((0.0002341701012 * (((((-(mParameters[9] * var_t2526)) + (var_t2528 / pow(var_t2525, 2.0))) - (((4.0 * var_t2532) * 3.8799692706433766e-07) * _lt_0_row[123])) + (3.2000000000000002 * var_t2470)) + (1.6000000000000001 * var_t2523))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) - (0.081176470589999994 * var_t3246)) - 0.1470588236))));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = -(var_chaste_interface__environment__dt * (2.1308823529999999e-05 * var_t3292));
        rJacobian[2][5] = -(var_chaste_interface__environment__dt * (var_t3285 * (( -0.081176470589999994 * var_t3226) + 0.1470588236)));
        rJacobian[2][6] = 0.0;
        rJacobian[2][7] = 0.0;
        rJacobian[2][8] = -(var_chaste_interface__environment__dt * (((((0.00037467216190000002 * var_t3285) * var_t5) * var_t397) * var_t1783) * 0.13135909020243375));
        rJacobian[2][9] = 0.0;
        rJacobian[2][10] = 0.0;
        rJacobian[2][11] = 0.0;
        rJacobian[3][0] = -(var_chaste_interface__environment__dt * ((-var_t3254) * var_t3079));
        rJacobian[3][1] = 0.0;
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (var_chaste_interface__environment__dt * ((((((2.0 / pow(var_t3252, 2.0)) * (((0.01 * var_chaste_interface__intracellular_ions__cansr) - (0.01 * var_chaste_interface__intracellular_ions__cajsr)) - var_t3105)) * 8.0) / var_t3249) / var_t3248) - var_t3257));
        rJacobian[3][4] = -(var_chaste_interface__environment__dt * var_t3257);
        rJacobian[3][5] = -(var_chaste_interface__environment__dt * ((-var_t3254) * var_t3131));
        rJacobian[3][6] = 0.0;
        rJacobian[3][7] = 0.0;
        rJacobian[3][8] = 0.0;
        rJacobian[3][9] = 0.0;
        rJacobian[3][10] = -(var_chaste_interface__environment__dt * ((-var_t3254) * var_t665));
        rJacobian[3][11] = -(var_chaste_interface__environment__dt * ((-var_t3254) * var_t664));
        rJacobian[4][0] = -(var_chaste_interface__environment__dt * (mParameters[1] * var_t3212));
        rJacobian[4][1] = 0.0;
        rJacobian[4][2] = -(var_chaste_interface__environment__dt * var_t3246);
        rJacobian[4][3] = -(var_chaste_interface__environment__dt * 0.00086956521740000001);
        rJacobian[4][4] = 1.0 - (var_chaste_interface__environment__dt * (( -0.00026249999999999998 * mParameters[1]) - 0.00086956521740000001));
        rJacobian[4][5] = -(var_chaste_interface__environment__dt * var_t3226);
        rJacobian[4][6] = 0.0;
        rJacobian[4][7] = 0.0;
        rJacobian[4][8] = 0.0;
        rJacobian[4][9] = 0.0;
        rJacobian[4][10] = 0.0;
        rJacobian[4][11] = 0.0;
        rJacobian[5][0] = -(var_chaste_interface__environment__dt * (var_t3063 * (((((0.00796178344 * var_t3070) * 1.0) * 0.00015335760000000003) * 856.55415970537967) + ((0.23999999999999999 * mParameters[0]) * var_t3079))));
        rJacobian[5][1] = -(var_chaste_interface__environment__dt * ((((0.00796178344 * var_t3063) * var_t3186) * 1.0) * 0.13135909020243375));
        rJacobian[5][2] = -(var_chaste_interface__environment__dt * (5.0 * var_t3063));
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (var_chaste_interface__environment__dt * (((( -2.0 / pow(var_t3062, 2.0)) * (((((((0.00796178344 * (((-var_t3092) - var_t3094) + ((0.40000000000000002 * var_t12) * var_t2364))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) + (0.23999999999999999 * var_t3105)) - (5.0 * var_chaste_interface__intracellular_ions__cass)) + (5.0 * var_chaste_interface__intracellular_ions__cai))) * ((( -4.0890000000000003e-05 / var_t3054) / var_t3053) - ((0.0097788000000000007 / var_t3059) / var_t3058))) + (var_t3063 * ((((((0.00796178344 * (((((var_t2317 - var_t2321) - var_t2328) - var_t2331) + (0.80000000000000004 * var_t2369)) + (0.40000000000000002 * var_t2427))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) + ((0.23999999999999999 * mParameters[0]) * var_t3131)) - 5.0))));
        rJacobian[5][6] = 0.0;
        rJacobian[5][7] = 0.0;
        rJacobian[5][8] = 0.0;
        rJacobian[5][9] = -(var_chaste_interface__environment__dt * (((((0.0031847133759999998 * var_t3063) * var_t5) * var_t11) * var_t2101) * 0.13135909020243375));
        rJacobian[5][10] = -(var_chaste_interface__environment__dt * ((0.23999999999999999 * var_t3191) * var_t665));
        rJacobian[5][11] = -(var_chaste_interface__environment__dt * ((0.23999999999999999 * var_t3191) * var_t664));
        rJacobian[6][0] = -(var_chaste_interface__environment__dt * (((( -0.00046834020230000003 * var_t652) * (((((-var_t1552) * var_t1554) * var_t857) * var_chaste_interface__Ito__a) + ((var_t1561 * var_t1578) * var_t861))) * 1.0) * 0.13135909020243375));
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = -(var_chaste_interface__environment__dt * ((((((( -2.5499857910000002e-10 * ((var_t1443 / pow(var_t1447, 2.0)) * pow(var_t1444, 0.40000000000000002))) * (var_t394 * var_chaste_interface__IKs__xs1)) * var_chaste_interface__IKs__xs2) * var_t2442) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = -(var_chaste_interface__environment__dt * (((( -0.00046834020230000003 * var_t652) * var_t2309) * 1.0) * 0.13135909020243375));
        rJacobian[6][6] = 1.0 - (var_chaste_interface__environment__dt * (((((0.00046834020230000003 * ((((((-((((var_t643 * 8314.0) * 310.0) * var_t2107) * var_t863)) - (((((0.43033148290000001 * var_t829) * var_t844) * _lt_0_row[85]) * 8314.0) * var_t2113)) - ((var_t1453 * 2577340.0) * var_t1627)) - ((var_t1465 * 2577340.0) * var_t2107)) - ((var_t1345 * 8314.0) * var_t2113)) + (2.0 * var_t2264))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) - 0.01470588236));
        rJacobian[6][7] = -(var_chaste_interface__environment__dt * 0.01470588236);
        rJacobian[6][8] = -(var_chaste_interface__environment__dt * ((((0.00046834020230000003 * ((-(((var_t1453 * 2577340.0) * var_t1627) * 0.018329999999999999)) + (2.0 * var_t1949))) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[6][9] = 0.0;
        rJacobian[6][10] = 0.0;
        rJacobian[6][11] = 0.0;
        rJacobian[7][0] = -(var_chaste_interface__environment__dt * (((( -0.01592356688 * (( -0.00035740000000000001 * (((var_t1585 * 3612.0012202503353) * var_t807) * var_t1383)) + (((0.00039313999999999999 * var_t1592) * var_t808) * var_t1594))) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[7][1] = -(var_chaste_interface__environment__dt * (((( -0.01592356688 * ((0.00035740000000000001 * ((var_t1956 * var_t1505) * var_t2720)) + (((0.00039313999999999999 * var_t1961) * var_t1505) * var_t2724))) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[7][2] = 0.0;
        rJacobian[7][3] = 0.0;
        rJacobian[7][4] = 0.0;
        rJacobian[7][5] = -(var_chaste_interface__environment__dt * (((( -0.01592356688 * (( -0.00035740000000000001 * var_t2340) + var_t2345)) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[7][6] = -(var_chaste_interface__environment__dt * 0.5);
        rJacobian[7][7] = 1.0 - (var_chaste_interface__environment__dt * (((((0.01592356688 * (( -0.00026804999999999998 * var_t1959) - (0.00029485500000000001 * var_t1963))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) - 0.5));
        rJacobian[7][8] = 0.0;
        rJacobian[7][9] = 0.0;
        rJacobian[7][10] = 0.0;
        rJacobian[7][11] = 0.0;
        rJacobian[8][0] = -(var_chaste_interface__environment__dt * ((((0.00046834020230000003 * ((-((var_t1546 * var_t692) * (((((-var_t1552) * var_t1554) * var_t697) * var_chaste_interface__INa__j) + ((var_t1558 * var_t1561) * var_chaste_interface__INa__jp)))) - ((var_t1566 * var_chaste_interface__INaL__mL) * ((((-var_t1549) * var_t1567) * var_chaste_interface__INaL__hL) + (var_t1561 * var_t1570))))) * 0.00015335760000000003) * 1.0) * 856.55415970537967));
        rJacobian[8][1] = 0.0;
        rJacobian[8][2] = -(var_chaste_interface__environment__dt * ((((0.00046834020230000003 * (( -4.7999999999999998 * var_t2470) - (2.3999999999999999 * var_t2523))) * 0.00015335760000000003) * 1.0) * 856.55415970537967));
        rJacobian[8][3] = 0.0;
        rJacobian[8][4] = 0.0;
        rJacobian[8][5] = -(var_chaste_interface__environment__dt * ((((0.00046834020230000003 * ((-var_t2289) - var_t2300)) * 0.00015335760000000003) * 1.0) * 856.55415970537967));
        rJacobian[8][6] = -(var_chaste_interface__environment__dt * ((( -0.0014050206070000001 * var_t2264) * 0.00015335760000000003) * 856.55415970537956));
        rJacobian[8][7] = 0.0;
        rJacobian[8][8] = 1.0 - (var_chaste_interface__environment__dt * (((((0.00046834020230000003 * (((((-(((((mParameters[10] * 8314.0) * 310.0) * var_t1615) * var_t692) * var_t704)) - (((((var_t707 * 8314.0) * 310.0) * var_t1615) * var_chaste_interface__INaL__mL) * var_t711)) - (2.3999999999999999 * (var_t398 * var_t1783))) - (3.0 * var_t1949)) - (((var_t713 * 9309355225.0) * 3.8799692706433766e-07) * _lt_0_row[124]))) * 0.00015335760000000003) * 1.0) * 856.55415970537967) - 0.01470588236));
        rJacobian[8][9] = -(var_chaste_interface__environment__dt * 0.01470588236);
        rJacobian[8][10] = 0.0;
        rJacobian[8][11] = 0.0;
        rJacobian[9][0] = -(var_chaste_interface__environment__dt * ((((0.01592356688 * (((((0.00125 * var_t1585) * 3612.0012202503353) * var_t772) * var_t1383) - (((0.0013749999999999999 * var_t1592) * var_t773) * var_t1594))) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[9][1] = -(var_chaste_interface__environment__dt * ((((0.01592356688 * ((-(((0.00125 * var_t1956) * var_t1500) * var_t2720)) - (((0.0013749999999999999 * var_t1961) * var_t1500) * var_t2724))) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[9][2] = 0.0;
        rJacobian[9][3] = 0.0;
        rJacobian[9][4] = 0.0;
        rJacobian[9][5] = -(var_chaste_interface__environment__dt * ((((0.01592356688 * (((var_t2334 - var_t2338) - (1.2 * var_t2369)) - (0.59999999999999998 * var_t2427))) * 1.0) * 0.00015335760000000003) * 856.55415970537967));
        rJacobian[9][6] = 0.0;
        rJacobian[9][7] = 0.0;
        rJacobian[9][8] = -(var_chaste_interface__environment__dt * 0.5);
        rJacobian[9][9] = 1.0 - (var_chaste_interface__environment__dt * (((((0.01592356688 * (((-(0.00093749999999999997 * var_t1959)) - (0.00103125 * var_t1963)) - (0.59999999999999998 * (var_t12 * var_t2101)))) * 1.0) * 0.00015335760000000003) * 856.55415970537967) - 0.5));
        rJacobian[9][10] = 0.0;
        rJacobian[9][11] = 0.0;
        rJacobian[10][0] = -(var_chaste_interface__environment__dt * (( -0.5 * var_t4076) * var_t4073));
        rJacobian[10][1] = -(var_chaste_interface__environment__dt * (( -0.5 * var_t4177) * var_t4073));
        rJacobian[10][2] = 0.0;
        rJacobian[10][3] = -(var_chaste_interface__environment__dt * ((( -102.515625 * var_t4095) * var_t4073) - (((0.0123 * (( -0.5 * var_t4100) - var_chaste_interface__ryr__Jrelnp)) / pow(var_t4072, 2.0)) * var_t4114)));
        rJacobian[10][4] = 0.0;
        rJacobian[10][5] = -(var_chaste_interface__environment__dt * (( -0.5 * var_t4083) * var_t4073));
        rJacobian[10][6] = 0.0;
        rJacobian[10][7] = 0.0;
        rJacobian[10][8] = 0.0;
        rJacobian[10][9] = 0.0;
        rJacobian[10][10] = 1.0 - (var_chaste_interface__environment__dt * (-var_t4073));
        rJacobian[10][11] = 0.0;
        rJacobian[11][0] = -(var_chaste_interface__environment__dt * (( -0.625 * var_t4076) * var_t4188));
        rJacobian[11][1] = -(var_chaste_interface__environment__dt * (( -0.625 * var_t4177) * var_t4188));
        rJacobian[11][2] = 0.0;
        rJacobian[11][3] = -(var_chaste_interface__environment__dt * ((( -128.14453119999999 * var_t4095) * var_t4188) - (((0.015375 * (( -0.625 * var_t4100) - var_chaste_interface__ryr__Jrelp)) / pow(var_t4187, 2.0)) * var_t4114)));
        rJacobian[11][4] = 0.0;
        rJacobian[11][5] = -(var_chaste_interface__environment__dt * (( -0.625 * var_t4083) * var_t4188));
        rJacobian[11][6] = 0.0;
        rJacobian[11][7] = 0.0;
        rJacobian[11][8] = 0.0;
        rJacobian[11][9] = 0.0;
        rJacobian[11][10] = 0.0;
        rJacobian[11][11] = 1.0 - (var_chaste_interface__environment__dt * (-var_t4188));
    }
    
    void Cellohara_rudy_2011_endoFromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[1];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[2];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[3];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[4];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[5];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[6];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cai = rY[9];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[125] * var_chaste_interface__Ito__iF) + (_lt_0_row[126] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[125] * var_chaste_interface__Ito__iFp) + (_lt_0_row[126] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[127] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[127] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[130]) - (0.75 * mParameters[4]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[130]) - (0.75 * mParameters[3]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[132] * var_chaste_interface__IKr__xrf) + (_lt_0_row[133] * var_chaste_interface__IKr__xrs)) * _lt_0_row[134] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[140], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[139], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[76]) - mParameters[4])) / _lt_0_row[142]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[141] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double d_dt_chaste_interface__membrane__v = -(var_INa__INa + var_INaL__INaL + var_Ito__Ito + var_ICaL__ICaL + var_ICaL__ICaNa + var_ICaL__ICaK + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_INaCa_i__INaCa_i + var_INaCa_i__INaCa_ss + var_INaK__INaK + var_INab__INab + var_IKb__IKb + var_IpCa__IpCa + var_ICab__ICab + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__membrane__v;
    }
    
    void Cellohara_rudy_2011_endoFromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        
        const double var_chaste_interface__environment__dt = mDt;

        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        
        rY[25] = (var_chaste_interface__ICaL__d + (_lt_0_row[0] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[1] * var_chaste_interface__environment__dt));
        rY[28] = (var_chaste_interface__ICaL__fcaf + (_lt_0_row[2] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[3] * var_chaste_interface__environment__dt));
        rY[32] = (var_chaste_interface__ICaL__fcafp + (_lt_0_row[4] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[5] * var_chaste_interface__environment__dt));
        rY[29] = (var_chaste_interface__ICaL__fcas + (_lt_0_row[6] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[7] * var_chaste_interface__environment__dt));
        rY[26] = (var_chaste_interface__ICaL__ff + (_lt_0_row[8] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[9] * var_chaste_interface__environment__dt));
        rY[31] = (var_chaste_interface__ICaL__ffp + (_lt_0_row[10] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[11] * var_chaste_interface__environment__dt));
        rY[27] = (var_chaste_interface__ICaL__fs + (_lt_0_row[12] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[13] * var_chaste_interface__environment__dt));
        rY[30] = (var_chaste_interface__ICaL__jca + (_lt_0_row[14] * var_chaste_interface__environment__dt)) / (1.0 - ( -0.013333333333333334 * var_chaste_interface__environment__dt));
        rY[38] = (var_chaste_interface__IK1__xk1 + (((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + (2.5537999999999998 * mParameters[3]) + 144.59)) / ((1.5691999999999999 * mParameters[3]) + 3.8115000000000001)))) / _lt_0_row[15]) * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[16] * var_chaste_interface__environment__dt));
        rY[34] = (var_chaste_interface__IKr__xrf + (_lt_0_row[17] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[18] * var_chaste_interface__environment__dt));
        rY[35] = (var_chaste_interface__IKr__xrs + (_lt_0_row[19] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[20] * var_chaste_interface__environment__dt));
        rY[36] = (var_chaste_interface__IKs__xs1 + (_lt_0_row[21] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[22] * var_chaste_interface__environment__dt));
        rY[37] = (var_chaste_interface__IKs__xs2 + (_lt_0_row[23] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[24] * var_chaste_interface__environment__dt));
        rY[17] = (var_chaste_interface__INaL__hL + (_lt_0_row[25] * var_chaste_interface__environment__dt)) / (1.0 - ( -0.0050000000000000001 * var_chaste_interface__environment__dt));
        rY[18] = (var_chaste_interface__INaL__hLp + (_lt_0_row[26] * var_chaste_interface__environment__dt)) / (1.0 - ( -0.0016666666666666668 * var_chaste_interface__environment__dt));
        rY[16] = (var_chaste_interface__INaL__mL + (_lt_0_row[27] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[28] * var_chaste_interface__environment__dt));
        rY[11] = (var_chaste_interface__INa__hf + (_lt_0_row[29] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[30] * var_chaste_interface__environment__dt));
        rY[12] = (var_chaste_interface__INa__hs + (_lt_0_row[31] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[32] * var_chaste_interface__environment__dt));
        rY[14] = (var_chaste_interface__INa__hsp + (_lt_0_row[33] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[34] * var_chaste_interface__environment__dt));
        rY[13] = (var_chaste_interface__INa__j + (_lt_0_row[35] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[36] * var_chaste_interface__environment__dt));
        rY[15] = (var_chaste_interface__INa__jp + (_lt_0_row[37] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[38] * var_chaste_interface__environment__dt));
        rY[10] = (var_chaste_interface__INa__m + (_lt_0_row[39] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[28] * var_chaste_interface__environment__dt));
        rY[19] = (var_chaste_interface__Ito__a + (_lt_0_row[40] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[41] * var_chaste_interface__environment__dt));
        rY[22] = (var_chaste_interface__Ito__ap + (_lt_0_row[42] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[41] * var_chaste_interface__environment__dt));
        rY[20] = (var_chaste_interface__Ito__iF + (_lt_0_row[43] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[44] * var_chaste_interface__environment__dt));
        rY[23] = (var_chaste_interface__Ito__iFp + (_lt_0_row[45] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[46] * var_chaste_interface__environment__dt));
        rY[21] = (var_chaste_interface__Ito__iS + (_lt_0_row[47] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[48] * var_chaste_interface__environment__dt));
        rY[24] = (var_chaste_interface__Ito__iSp + (_lt_0_row[49] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[50] * var_chaste_interface__environment__dt));
        
        double _guess[12] = {rY[1],rY[33],rY[9],rY[8],rY[7],rY[6],rY[4],rY[5],rY[2],rY[3],rY[39],rY[40]};
        CardiacNewtonSolver<12,Cellohara_rudy_2011_endoFromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<12,Cellohara_rudy_2011_endoFromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[1] = _guess[0];
        rY[33] = _guess[1];
        rY[9] = _guess[2];
        rY[8] = _guess[3];
        rY[7] = _guess[4];
        rY[6] = _guess[5];
        rY[4] = _guess[6];
        rY[5] = _guess[7];
        rY[2] = _guess[8];
        rY[3] = _guess[9];
        rY[39] = _guess[10];
        rY[40] = _guess[11];
    }
    
    std::vector<double> Cellohara_rudy_2011_endoFromCellMLBackwardEuler::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[1];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[2];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[3];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[4];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[5];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[6];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cai = rY[9];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        double var_chaste_interface__ryr__Jrelnp = rY[39];
        // Units: dimensionless; Initial value: 2.5e-7
        double var_chaste_interface__ryr__Jrelp = rY[40];
        // Units: dimensionless; Initial value: 3.12e-7
        
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        // Mathematics
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[125] * var_chaste_interface__Ito__iF) + (_lt_0_row[126] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[125] * var_chaste_interface__Ito__iFp) + (_lt_0_row[126] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[127] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[127] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[128] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[130]) - (0.75 * mParameters[4]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[130]) - (0.75 * mParameters[3]))) / _lt_0_row[131]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[132] * var_chaste_interface__IKr__xrf) + (_lt_0_row[133] * var_chaste_interface__IKr__xrs)) * _lt_0_row[134] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[135]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[136]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[138]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[137]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[136] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[140], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[140]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[139], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[139]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[76]) - mParameters[4])) / _lt_0_row[142]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[141] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[77]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[129]; // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_ryr__fJrelp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ryr__Jrel = mParameters[0] * (((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp) + (var_ryr__fJrelp * var_chaste_interface__ryr__Jrelp)); // millimolar_per_millisecond
        const double var_chaste_interface__ICaL__ICaL = var_ICaL__ICaL; // microA_per_microF
        const double var_chaste_interface__ICab__ICab = var_ICab__ICab; // microA_per_microF
        const double var_chaste_interface__INa__INa = var_INa__INa; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaK = var_ICaL__ICaK; // microA_per_microF
        const double var_chaste_interface__INaL__INaL = var_INaL__INaL; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_i = var_INaCa_i__INaCa_i; // microA_per_microF
        const double var_chaste_interface__INab__INab = var_INab__INab; // microA_per_microF
        const double var_chaste_interface__IKs__IKs = var_IKs__IKs; // microA_per_microF
        const double var_chaste_interface__INaK__INaK = var_INaK__INaK; // microA_per_microF
        const double var_chaste_interface__IKb__IKb = var_IKb__IKb; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaNa = var_ICaL__ICaNa; // microA_per_microF
        const double var_chaste_interface__IK1__IK1 = var_IK1__IK1; // microA_per_microF
        const double var_chaste_interface__Ito__Ito = var_Ito__Ito; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_ss = var_INaCa_i__INaCa_ss; // microA_per_microF
        const double var_chaste_interface__IKr__IKr = var_IKr__IKr; // microA_per_microF
        const double var_chaste_interface__IpCa__IpCa = var_IpCa__IpCa; // microA_per_microF
        
        std::vector<double> dqs(20);
        dqs[0] = var_ryr__Jrel;
        dqs[1] = var_chaste_interface__ICaL__ICaK;
        dqs[2] = var_chaste_interface__ICaL__ICaNa;
        dqs[3] = var_chaste_interface__ICaL__ICaL;
        dqs[4] = var_chaste_interface__ICab__ICab;
        dqs[5] = var_chaste_interface__IKb__IKb;
        dqs[6] = var_chaste_interface__INab__INab;
        dqs[7] = var_chaste_interface__IpCa__IpCa;
        dqs[8] = var_chaste_interface__INa__INa;
        dqs[9] = var_INa__h;
        dqs[10] = var_chaste_interface__IK1__IK1;
        dqs[11] = var_chaste_interface__INaL__INaL;
        dqs[12] = var_chaste_interface__IKr__IKr;
        dqs[13] = var_chaste_interface__IKs__IKs;
        dqs[14] = var_chaste_interface__INaCa_i__INaCa_i;
        dqs[15] = var_chaste_interface__INaCa_i__INaCa_ss;
        dqs[16] = var_chaste_interface__INaK__INaK;
        dqs[17] = var_chaste_interface__membrane__Istim;
        dqs[18] = var_chaste_interface__Ito__Ito;
        dqs[19] = var_chaste_interface__environment__time;
        return dqs;
    }
    
template<>
void OdeSystemInformation<Cellohara_rudy_2011_endoFromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "ohara_rudy_2011";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.00190465);

    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0125840447);

    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268004498);

    this->mVariableNames.push_back("intracellular_ions__nass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268089977);

    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555918);

    this->mVariableNames.push_back("intracellular_ions__kss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555651);

    this->mVariableNames.push_back("intracellular_ions__cass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.49e-05);

    this->mVariableNames.push_back("intracellular_ions__cansr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.619574538);

    this->mVariableNames.push_back("intracellular_ions__cajsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.571234014);

    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.6e-05);

    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007344121102);

    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6981071913);

    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6980895801);

    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979908432);

    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4549485525);

    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979245865);

    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001882617273);

    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5008548855);

    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2693065357);

    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001001097687);

    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541745);

    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5865061736);

    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0005100862934);

    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541823);

    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6393399482);

    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.34e-9);

    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9102412777);

    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9998046777);

    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999738312);

    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002749414044);

    this->mVariableNames.push_back("IKr__xrf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.08e-6);

    this->mVariableNames.push_back("IKr__xrs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4550704887);

    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2707758025);

    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001928503426);

    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9967597594);

    this->mVariableNames.push_back("ryr__Jrelnp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.5e-7);

    this->mVariableNames.push_back("ryr__Jrelp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.12e-7);

    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_background_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_background_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_background_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");
    
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_dyadic_space_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");
    
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellohara_rudy_2011_endoFromCellMLBackwardEuler)
