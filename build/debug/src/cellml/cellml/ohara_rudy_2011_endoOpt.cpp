//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: ohara_rudy_2011
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Fri Apr  7 15:54:39 2017
//! 
//! <autogenerated>

#include "ohara_rudy_2011_endoOpt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<90; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__membrane__v)
    {
        const double _offset_0 = var_chaste_interface__membrane__v - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__membrane__v)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__membrane__v>mTableMaxs[0] || var_chaste_interface__membrane__v<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables(const Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables&);
    Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables& operator= (const Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables&);
    Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 90;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][90];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 1.0 - (1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 1.0 - (1.0 / (1.0 + exp((var_chaste_interface__membrane__v - 213.59999999999999) * 0.0066137566137566143)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 1.0 - (0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 1.0 - (0.29999999999999999 + (0.59999999999999998 / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = exp(1.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 54.810000000000002) * 0.026171159382360639));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 1.0 - (1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 54.810000000000002) * 0.026171159382360639)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = ((1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 55.0) * 0.013333333333333334))) * 1.0) / (1.0 + exp((var_chaste_interface__membrane__v - 10.0) * 0.033333333333333333));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = 1.0 + exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 1.0 + (1.0 / exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = exp((var_chaste_interface__membrane__v * 16112.995000000001) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 1.0 + exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = 1.0 + (1.0 / exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = exp((var_chaste_interface__membrane__v * 50403.763999999996) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][26] = exp((var_chaste_interface__membrane__v * 16112.995000000001) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][27] = 9.0730000000000004 * exp((var_chaste_interface__membrane__v *  -14955.174999999999) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][28] = 9.0730000000000004 * exp((var_chaste_interface__membrane__v *  -14955.174999999999) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][29] = 27.780000000000001 * exp((var_chaste_interface__membrane__v * 111440.175) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][30] = 27.780000000000001 * exp((var_chaste_interface__membrane__v * 111440.175) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][31] = 27.780000000000001 * exp((var_chaste_interface__membrane__v * 111440.175) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][32] = 9.0730000000000004 * exp((var_chaste_interface__membrane__v *  -14955.174999999999) * 1.2933230902144589e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][33] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.48)) * 0.054525627044711013));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][34] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][35] = exp((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][36] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][37] = exp(2.0 * ((var_chaste_interface__membrane__v * 96485.0) * 3.8799692706433766e-07)) - 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][38] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 39.57)) * 0.10130685847431871));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][39] = 1.0 / ((6.7649999999999997 * exp((var_chaste_interface__membrane__v + 11.640000000000001) * 0.02876042565429968)) + (8.5519999999999996 * exp((-(var_chaste_interface__membrane__v + 77.420000000000002)) * 0.16792611251049538)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][40] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][41] = 1.0 / ((1.432e-05 * exp((-((var_chaste_interface__membrane__v + 1.196) - 0.0)) * 0.15910898965791567)) + (6.149 * exp(((var_chaste_interface__membrane__v + 0.50960000000000005) - 0.0) * 0.049333991119881598)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][42] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][43] = 1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][44] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][45] = 2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][46] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 89.099999999999994) - 0.0) * 0.16431153466973381));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][47] = 3.0 * (1.0 / ((0.0097940000000000006 * exp((-((var_chaste_interface__membrane__v + 17.949999999999999) - 0.0)) * 0.035650623885918005)) + (0.33429999999999999 * exp(((var_chaste_interface__membrane__v + 5.7300000000000004) - 0.0) * 0.017649135192375574))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][48] = 1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 82.900000000000006) - 0.0) * 0.16431153466973381));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][49] = 1.46 * (2.0379999999999998 + (1.0 / ((0.021360000000000001 * exp((-((var_chaste_interface__membrane__v + 100.59999999999999) - 0.0)) * 0.12075836251660427)) + (0.30520000000000003 * exp(((var_chaste_interface__membrane__v + 0.99409999999999998) - 0.0) * 0.02600780234070221)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][50] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 42.850000000000001)) * 0.18996960486322187));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][51] = 1.0 / ((6.7649999999999997 * exp((var_chaste_interface__membrane__v + 11.640000000000001) * 0.02876042565429968)) + (8.5519999999999996 * exp((-(var_chaste_interface__membrane__v + 77.420000000000002)) * 0.16792611251049538)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][52] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 87.609999999999999) * 0.13354700854700854));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][53] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 93.810000000000002) * 0.13354700854700854));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][54] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 14.34)) * 0.067476383265856948));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][55] = 1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-(var_chaste_interface__membrane__v - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][56] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][57] = (4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][58] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][59] = (23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][60] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v - 24.34)) * 0.067476383265856948));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][61] = 1.0515000000000001 / ((1.0 / (1.2089000000000001 * (1.0 + exp((-(var_chaste_interface__membrane__v - 18.4099)) * 0.034035137876343539)))) + (3.5 / (1.0 + exp((var_chaste_interface__membrane__v + 100.0) * 0.034035137876343539))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][62] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][63] = (1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((4.5620000000000003 + (1.0 / ((0.39329999999999998 * exp((-(var_chaste_interface__membrane__v + 100.0)) * 0.01)) + (0.08004 * exp((var_chaste_interface__membrane__v + 50.0) * 0.060277275467148887))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][64] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 43.939999999999998) * 0.17510068289266328));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][65] = (1.3540000000000001 + (0.0001 / (exp((var_chaste_interface__membrane__v - 167.40000000000001) * 0.062932662051604776) + exp((-(var_chaste_interface__membrane__v - 12.23)) * 4.6425255338904359)))) * (1.0 - (0.5 / (1.0 + exp((var_chaste_interface__membrane__v + 70.0) * 0.050000000000000003)))) * ((23.620000000000001 + (1.0 / ((0.0014159999999999999 * exp((-(var_chaste_interface__membrane__v + 96.519999999999996)) * 0.016934801016088061)) + (1.7800000000000001e-08 * exp((var_chaste_interface__membrane__v + 114.09999999999999) * 0.12377769525931426))))) * 1.0);
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][66] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 3.9399999999999999)) * 0.23640661938534277));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][67] = 0.59999999999999998 + (1.0 / (exp( -0.050000000000000003 * (var_chaste_interface__membrane__v + 6.0)) + exp(0.089999999999999997 * (var_chaste_interface__membrane__v + 14.0))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][68] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][69] = 7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][70] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][71] = 1000.0 + (1.0 / ((3.4999999999999997e-05 * exp((-(var_chaste_interface__membrane__v + 5.0)) * 0.25)) + (3.4999999999999997e-05 * exp((var_chaste_interface__membrane__v + 5.0) * 0.16666666666666666))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][72] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][73] = 7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][74] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][75] = 100.0 + (1.0 / ((0.00012 * exp((-var_chaste_interface__membrane__v) * 0.33333333333333331)) + (0.00012 * exp(var_chaste_interface__membrane__v * 0.14285714285714285))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][76] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][77] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][78] = 2.5 * (7.0 + (1.0 / ((0.0044999999999999997 * exp((-(var_chaste_interface__membrane__v + 20.0)) * 0.10000000000000001)) + (0.0044999999999999997 * exp((var_chaste_interface__membrane__v + 20.0) * 0.10000000000000001)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][79] = 1.0 / (1.0 + exp((var_chaste_interface__membrane__v + 19.579999999999998) * 0.27056277056277056));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][80] = 2.5 * (7.0 + (1.0 / ((0.040000000000000001 * exp((-(var_chaste_interface__membrane__v - 4.0)) * 0.14285714285714285)) + (0.040000000000000001 * exp((var_chaste_interface__membrane__v - 4.0) * 0.14285714285714285)))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][81] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 8.3369999999999997)) * 0.14729709824716453));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][82] = 12.98 + (1.0 / ((0.36520000000000002 * exp((var_chaste_interface__membrane__v - 31.66) * 0.25846471956577927)) + (4.1230000000000003e-05 * exp((-(var_chaste_interface__membrane__v - 47.780000000000001)) * 0.049067713444553483))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][83] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 8.3369999999999997)) * 0.14729709824716453));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][84] = 1.865 + (1.0 / ((0.066290000000000002 * exp((var_chaste_interface__membrane__v - 34.700000000000003) * 0.13596193065941536)) + (1.128e-05 * exp((-(var_chaste_interface__membrane__v - 29.739999999999998)) * 0.038550501156515031))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][85] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][86] = 817.29999999999995 + (1.0 / ((0.00023259999999999999 * exp((var_chaste_interface__membrane__v + 48.280000000000001) * 0.056179775280898875)) + (0.001292 * exp((-(var_chaste_interface__membrane__v + 210.0)) * 0.0043478260869565218))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][87] = 1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + 11.6)) * 0.11195700850873264));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][88] = 1.0 / ((0.01 * exp((var_chaste_interface__membrane__v - 50.0) * 0.050000000000000003)) + (0.019300000000000001 * exp((-(var_chaste_interface__membrane__v + 66.540000000000006)) * 0.032258064516129031)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__membrane__v = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][89] = 122.2 / (exp((-(var_chaste_interface__membrane__v + 127.2)) * 0.049115913555992145) + exp((var_chaste_interface__membrane__v + 236.80000000000001) * 0.014423770373575654));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[90];
    
    // Lookup tables
    double (*_lookup_table_0)[90];
    
};

std::auto_ptr<Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables> Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellohara_rudy_2011_endoFromCellMLOpt::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 0.5; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Amplitude =  -80.0 * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Cellohara_rudy_2011_endoFromCellMLOpt::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[9];
    }
    
    Cellohara_rudy_2011_endoFromCellMLOpt::Cellohara_rudy_2011_endoFromCellMLOpt(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                41,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellohara_rudy_2011_endoFromCellMLOpt>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        this->mParameters[0] = 1.0; // (c,ryr__Jrel_scaling_factor) [dimensionless]
        this->mParameters[1] = 1.0; // (c,SERCA__Jup_b) [dimensionless]
        this->mParameters[2] = 1.8; // (c,extracellular__cao) [millimolar]
        this->mParameters[3] = 5.4; // (c,extracellular__ko) [millimolar]
        this->mParameters[4] = 140; // (c,extracellular__nao) [millimolar]
        this->mParameters[5] = 0.0001; // (c,ICaL__PCa_b) [dimensionless]
        this->mParameters[6] = 2.5e-8; // (c,ICab__PCab) [milliS_per_microF]
        this->mParameters[7] = 0.003; // (c,IKb__GKb_b) [milliS_per_microF]
        this->mParameters[8] = 3.75e-10; // (c,INab__PNab) [milliS_per_microF]
        this->mParameters[9] = 0.0005; // (c,IpCa__GpCa) [milliS_per_microF]
        this->mParameters[10] = 75; // (c,INa__GNa) [milliS_per_microF]
        this->mParameters[11] = 0.1908; // (c,IK1__GK1_b) [milliS_per_microF]
        this->mParameters[12] = 0.0075; // (c,INaL__GNaL_b) [milliS_per_microF]
        this->mParameters[13] = 0.046; // (c,IKr__GKr_b) [milliS_per_microF]
        this->mParameters[14] = 0.0034; // (c,IKs__GKs_b) [milliS_per_microF]
        this->mParameters[15] = 0.0008; // (c,INaCa_i__Gncx_b) [milliS_per_microF]
        this->mParameters[16] = 30; // (c,INaK__Pnak_b) [milliS_per_microF]
        this->mParameters[17] = 0.02; // (c,Ito__Gto_b) [milliS_per_microF]
    }
    
    Cellohara_rudy_2011_endoFromCellMLOpt::~Cellohara_rudy_2011_endoFromCellMLOpt()
    {
    }
    
    AbstractLookupTableCollection* Cellohara_rudy_2011_endoFromCellMLOpt::GetLookupTableCollection()
    {
        return Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance();
    }
    
    double Cellohara_rudy_2011_endoFromCellMLOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[1];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[2];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[3];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[4];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[5];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[6];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cai = rY[9];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[0] * var_chaste_interface__Ito__iF) + (_lt_0_row[1] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[2] * var_chaste_interface__Ito__iFp) + (_lt_0_row[3] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[6] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[7] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[8]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[9]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[4] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[5] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[10]) - (0.75 * mParameters[4]))) / _lt_0_row[11]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[12]) - (0.75 * mParameters[3]))) / _lt_0_row[13]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[14] * var_chaste_interface__IKr__xrf) + (_lt_0_row[15] * var_chaste_interface__IKr__xrs)) * _lt_0_row[16] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[17]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[18]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[19]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[20] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[21]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[22]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[23]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[26]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[24]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[25] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[31]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[29], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[30]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[32]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[27], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[28]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[34]) - mParameters[4])) / _lt_0_row[35]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[33] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[36]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[37]; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaL = var_ICaL__ICaL; // microA_per_microF
        const double var_chaste_interface__ICab__ICab = var_ICab__ICab; // microA_per_microF
        const double var_chaste_interface__INa__INa = var_INa__INa; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaK = var_ICaL__ICaK; // microA_per_microF
        const double var_chaste_interface__INaL__INaL = var_INaL__INaL; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_i = var_INaCa_i__INaCa_i; // microA_per_microF
        const double var_chaste_interface__INab__INab = var_INab__INab; // microA_per_microF
        const double var_chaste_interface__IKs__IKs = var_IKs__IKs; // microA_per_microF
        const double var_chaste_interface__INaK__INaK = var_INaK__INaK; // microA_per_microF
        const double var_chaste_interface__IKb__IKb = var_IKb__IKb; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaNa = var_ICaL__ICaNa; // microA_per_microF
        const double var_chaste_interface__IK1__IK1 = var_IK1__IK1; // microA_per_microF
        const double var_chaste_interface__Ito__Ito = var_Ito__Ito; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_ss = var_INaCa_i__INaCa_ss; // microA_per_microF
        const double var_chaste_interface__IKr__IKr = var_IKr__IKr; // microA_per_microF
        const double var_chaste_interface__IpCa__IpCa = var_IpCa__IpCa; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__INa + var_chaste_interface__INaL__INaL + var_chaste_interface__Ito__Ito + var_chaste_interface__ICaL__ICaL + var_chaste_interface__ICaL__ICaNa + var_chaste_interface__ICaL__ICaK + var_chaste_interface__IKr__IKr + var_chaste_interface__IKs__IKs + var_chaste_interface__IK1__IK1 + var_chaste_interface__INaCa_i__INaCa_i + var_chaste_interface__INaCa_i__INaCa_ss + var_chaste_interface__INaK__INaK + var_chaste_interface__INab__INab + var_chaste_interface__IKb__IKb + var_chaste_interface__IpCa__IpCa + var_chaste_interface__ICab__ICab) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellohara_rudy_2011_endoFromCellMLOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[1];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[2];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[3];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[4];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[5];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[6];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cansr = rY[7];
        // Units: millimolar; Initial value: 1.619574538
        double var_chaste_interface__intracellular_ions__cajsr = rY[8];
        // Units: millimolar; Initial value: 1.571234014
        double var_chaste_interface__intracellular_ions__cai = rY[9];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        double var_chaste_interface__ryr__Jrelnp = rY[39];
        // Units: dimensionless; Initial value: 2.5e-7
        double var_chaste_interface__ryr__Jrelp = rY[40];
        // Units: dimensionless; Initial value: 3.12e-7
        
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        // Mathematics
        double d_dt_chaste_interface__membrane__v;
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[0] * var_chaste_interface__Ito__iF) + (_lt_0_row[1] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[2] * var_chaste_interface__Ito__iFp) + (_lt_0_row[3] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[6] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[7] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[8]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[9]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[4] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[5] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[10]) - (0.75 * mParameters[4]))) / _lt_0_row[11]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[12]) - (0.75 * mParameters[3]))) / _lt_0_row[13]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[14] * var_chaste_interface__IKr__xrf) + (_lt_0_row[15] * var_chaste_interface__IKr__xrs)) * _lt_0_row[16] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[17]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[18]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[19]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[20] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[21]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[22]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[23]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[26]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[24]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[25] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[31]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[29], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[30]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[32]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[27], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[28]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[34]) - mParameters[4])) / _lt_0_row[35]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[33] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[36]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[37]; // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_diff__JdiffNa = (var_chaste_interface__intracellular_ions__nass - var_chaste_interface__intracellular_ions__nai) * 0.5; // millimolar_per_millisecond
        const double var_diff__Jdiff = (var_chaste_interface__intracellular_ions__cass - var_chaste_interface__intracellular_ions__cai) * 5.0; // millimolar_per_millisecond
        const double var_SERCA__fJupp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_SERCA__Jup = mParameters[1] * ((((1.0 - var_SERCA__fJupp) * ((var_chaste_interface__intracellular_ions__cai * 0.0043750000000000004) / (var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003))) + (var_SERCA__fJupp * ((var_chaste_interface__intracellular_ions__cai * 0.01203125) / ((var_chaste_interface__intracellular_ions__cai + 0.00092000000000000003) - 0.00017000000000000001)))) - ((0.0039375 * var_chaste_interface__intracellular_ions__cansr) * 0.066666666666666666)); // millimolar_per_millisecond
        const double var_diff__JdiffK = (var_chaste_interface__intracellular_ions__kss - var_chaste_interface__intracellular_ions__ki) * 0.5; // millimolar_per_millisecond
        const double var_ryr__fJrelp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ryr__Jrel = mParameters[0] * (((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp) + (var_ryr__fJrelp * var_chaste_interface__ryr__Jrelp)); // millimolar_per_millisecond
        const double var_trans_flux__Jtr = (var_chaste_interface__intracellular_ions__cansr - var_chaste_interface__intracellular_ions__cajsr) * 0.01; // millimolar_per_millisecond
        const double var_ICaL__km2n = var_chaste_interface__ICaL__jca * 1.0; // per_millisecond
        const double var_ryr__tau_rel_temp = 4.75 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double var_ryr__tau_relp_temp = 5.9375 / (1.0 + (0.0123 / var_chaste_interface__intracellular_ions__cajsr)); // millisecond
        const double d_dt_chaste_interface__CaMK__CaMKt = (0.050000000000000003 * var_CaMK__CaMKb * (var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt)) - (0.00068000000000000005 * var_chaste_interface__CaMK__CaMKt); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nai = (((-(var_INa__INa + var_INaL__INaL + (3.0 * var_INaCa_i__INaCa_i) + (3.0 * var_INaK__INaK) + var_INab__INab)) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffNa * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__nass = (((-(var_ICaL__ICaNa + (3.0 * var_INaCa_i__INaCa_ss))) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffNa; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__ki = (((-((var_Ito__Ito + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_IKb__IKb + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())) - (2.0 * var_INaK__INaK))) * 0.00015335760000000003) * 0.40115874845699667) + ((var_diff__JdiffK * 7.5988000000000021e-07) * 38705.801844873327); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__kss = (((-var_ICaL__ICaK) * 0.00015335760000000003) * 13.639397447537888) - var_diff__JdiffK; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cass = (1.0 / (1.0 + (4.0890000000000003e-05 / pow(0.00087000000000000001 + var_chaste_interface__intracellular_ions__cass, 2.0)) + (0.0097788000000000007 / pow(0.0086999999999999994 + var_chaste_interface__intracellular_ions__cass, 2.0)))) * (((((-(var_ICaL__ICaL - (2.0 * var_INaCa_i__INaCa_ss))) * 0.00015335760000000003) * 6.8196987237689441) + ((var_ryr__Jrel * 1.8237120000000002e-07) * 1315997.2627256932)) - var_diff__Jdiff); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cansr = var_SERCA__Jup - ((var_trans_flux__Jtr * 1.8237120000000002e-07) * 476810.60243684537); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cajsr = (1.0 / (1.0 + (8.0 / pow(0.80000000000000004 + var_chaste_interface__intracellular_ions__cajsr, 2.0)))) * (var_trans_flux__Jtr - var_ryr__Jrel); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_ions__cai = (1.0 / (1.0 + (0.00011900000000000002 / pow(0.0023800000000000002 + var_chaste_interface__intracellular_ions__cai, 2.0)) + (3.5000000000000004e-05 / pow(0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai, 2.0)))) * (((((-((var_IpCa__IpCa + var_ICab__ICab) - (2.0 * var_INaCa_i__INaCa_i))) * 0.00015335760000000003) * 0.20057937422849834) - ((var_SERCA__Jup * 2.0972688000000006e-06) * 38705.801844873327)) + ((var_diff__Jdiff * 7.5988000000000021e-07) * 38705.801844873327)); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa__m = (_lt_0_row[38] - var_chaste_interface__INa__m) / _lt_0_row[39]; // per_millisecond
        const double d_dt_chaste_interface__INa__hf = (_lt_0_row[40] - var_chaste_interface__INa__hf) / _lt_0_row[41]; // per_millisecond
        const double d_dt_chaste_interface__INa__hs = (_lt_0_row[42] - var_chaste_interface__INa__hs) / _lt_0_row[43]; // per_millisecond
        const double d_dt_chaste_interface__INa__j = (_lt_0_row[44] - var_chaste_interface__INa__j) / _lt_0_row[45]; // per_millisecond
        const double d_dt_chaste_interface__INa__hsp = (_lt_0_row[46] - var_chaste_interface__INa__hsp) / _lt_0_row[47]; // per_millisecond
        const double d_dt_chaste_interface__INa__jp = (_lt_0_row[48] - var_chaste_interface__INa__jp) / _lt_0_row[49]; // per_millisecond
        const double d_dt_chaste_interface__INaL__mL = (_lt_0_row[50] - var_chaste_interface__INaL__mL) / _lt_0_row[51]; // per_millisecond
        const double d_dt_chaste_interface__INaL__hL = (_lt_0_row[52] - var_chaste_interface__INaL__hL) * 0.0050000000000000001; // per_millisecond
        const double d_dt_chaste_interface__INaL__hLp = (_lt_0_row[53] - var_chaste_interface__INaL__hLp) * 0.0016666666666666668; // per_millisecond
        const double d_dt_chaste_interface__Ito__a = (_lt_0_row[54] - var_chaste_interface__Ito__a) / _lt_0_row[55]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iF = (_lt_0_row[56] - var_chaste_interface__Ito__iF) / _lt_0_row[57]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iS = (_lt_0_row[58] - var_chaste_interface__Ito__iS) / _lt_0_row[59]; // per_millisecond
        const double d_dt_chaste_interface__Ito__ap = (_lt_0_row[60] - var_chaste_interface__Ito__ap) / _lt_0_row[61]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iFp = (_lt_0_row[62] - var_chaste_interface__Ito__iFp) / _lt_0_row[63]; // per_millisecond
        const double d_dt_chaste_interface__Ito__iSp = (_lt_0_row[64] - var_chaste_interface__Ito__iSp) / _lt_0_row[65]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__d = (_lt_0_row[66] - var_chaste_interface__ICaL__d) / _lt_0_row[67]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__ff = (_lt_0_row[68] - var_chaste_interface__ICaL__ff) / _lt_0_row[69]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fs = (_lt_0_row[70] - var_chaste_interface__ICaL__fs) / _lt_0_row[71]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcaf = (_lt_0_row[72] - var_chaste_interface__ICaL__fcaf) / _lt_0_row[73]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcas = (_lt_0_row[74] - var_chaste_interface__ICaL__fcas) / _lt_0_row[75]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__jca = (_lt_0_row[76] - var_chaste_interface__ICaL__jca) * 0.013333333333333334; // per_millisecond
        const double d_dt_chaste_interface__ICaL__ffp = (_lt_0_row[77] - var_chaste_interface__ICaL__ffp) / _lt_0_row[78]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__fcafp = (_lt_0_row[79] - var_chaste_interface__ICaL__fcafp) / _lt_0_row[80]; // per_millisecond
        const double d_dt_chaste_interface__ICaL__nca = ((1.0 / ((1000.0 / var_ICaL__km2n) + pow(1.0 + (0.002 / var_chaste_interface__intracellular_ions__cass), 4.0))) * 1000.0) - (var_chaste_interface__ICaL__nca * var_ICaL__km2n); // per_millisecond
        const double d_dt_chaste_interface__IKr__xrf = (_lt_0_row[81] - var_chaste_interface__IKr__xrf) / _lt_0_row[82]; // per_millisecond
        const double d_dt_chaste_interface__IKr__xrs = (_lt_0_row[83] - var_chaste_interface__IKr__xrs) / _lt_0_row[84]; // per_millisecond
        const double d_dt_chaste_interface__IKs__xs1 = (_lt_0_row[85] - var_chaste_interface__IKs__xs1) / _lt_0_row[86]; // per_millisecond
        const double d_dt_chaste_interface__IKs__xs2 = (_lt_0_row[87] - var_chaste_interface__IKs__xs2) / _lt_0_row[88]; // per_millisecond
        const double d_dt_chaste_interface__IK1__xk1 = ((1.0 / (1.0 + exp((-(var_chaste_interface__membrane__v + (2.5537999999999998 * mParameters[3]) + 144.59)) / ((1.5691999999999999 * mParameters[3]) + 3.8115000000000001)))) - var_chaste_interface__IK1__xk1) / _lt_0_row[89]; // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrelnp = (((2.375 * (-var_ICaL__ICaL)) / (1.0 + (1.0 * pow(1.5 / var_chaste_interface__intracellular_ions__cajsr, 8.0)))) - var_chaste_interface__ryr__Jrelnp) / ((var_ryr__tau_rel_temp < 0.001) ? 0.001 : var_ryr__tau_rel_temp); // per_millisecond
        const double d_dt_chaste_interface__ryr__Jrelp = (((2.96875 * (-var_ICaL__ICaL)) / (1.0 + pow(1.5 / var_chaste_interface__intracellular_ions__cajsr, 8.0))) - var_chaste_interface__ryr__Jrelp) / ((var_ryr__tau_relp_temp < 0.001) ? 0.001 : var_ryr__tau_relp_temp); // per_millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__v = 0.0;
        }
        else
        {
            d_dt_chaste_interface__membrane__v = -(var_INa__INa + var_INaL__INaL + var_Ito__Ito + var_ICaL__ICaL + var_ICaL__ICaNa + var_ICaL__ICaK + var_IKr__IKr + var_IKs__IKs + var_IK1__IK1 + var_INaCa_i__INaCa_i + var_INaCa_i__INaCa_ss + var_INaK__INaK + var_INab__INab + var_IKb__IKb + var_IpCa__IpCa + var_ICab__ICab + (var_chaste_interface__membrane__Istim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__membrane__v;
        rDY[1] = d_dt_chaste_interface__CaMK__CaMKt;
        rDY[2] = d_dt_chaste_interface__intracellular_ions__nai;
        rDY[3] = d_dt_chaste_interface__intracellular_ions__nass;
        rDY[4] = d_dt_chaste_interface__intracellular_ions__ki;
        rDY[5] = d_dt_chaste_interface__intracellular_ions__kss;
        rDY[6] = d_dt_chaste_interface__intracellular_ions__cass;
        rDY[7] = d_dt_chaste_interface__intracellular_ions__cansr;
        rDY[8] = d_dt_chaste_interface__intracellular_ions__cajsr;
        rDY[9] = d_dt_chaste_interface__intracellular_ions__cai;
        rDY[10] = d_dt_chaste_interface__INa__m;
        rDY[11] = d_dt_chaste_interface__INa__hf;
        rDY[12] = d_dt_chaste_interface__INa__hs;
        rDY[13] = d_dt_chaste_interface__INa__j;
        rDY[14] = d_dt_chaste_interface__INa__hsp;
        rDY[15] = d_dt_chaste_interface__INa__jp;
        rDY[16] = d_dt_chaste_interface__INaL__mL;
        rDY[17] = d_dt_chaste_interface__INaL__hL;
        rDY[18] = d_dt_chaste_interface__INaL__hLp;
        rDY[19] = d_dt_chaste_interface__Ito__a;
        rDY[20] = d_dt_chaste_interface__Ito__iF;
        rDY[21] = d_dt_chaste_interface__Ito__iS;
        rDY[22] = d_dt_chaste_interface__Ito__ap;
        rDY[23] = d_dt_chaste_interface__Ito__iFp;
        rDY[24] = d_dt_chaste_interface__Ito__iSp;
        rDY[25] = d_dt_chaste_interface__ICaL__d;
        rDY[26] = d_dt_chaste_interface__ICaL__ff;
        rDY[27] = d_dt_chaste_interface__ICaL__fs;
        rDY[28] = d_dt_chaste_interface__ICaL__fcaf;
        rDY[29] = d_dt_chaste_interface__ICaL__fcas;
        rDY[30] = d_dt_chaste_interface__ICaL__jca;
        rDY[31] = d_dt_chaste_interface__ICaL__ffp;
        rDY[32] = d_dt_chaste_interface__ICaL__fcafp;
        rDY[33] = d_dt_chaste_interface__ICaL__nca;
        rDY[34] = d_dt_chaste_interface__IKr__xrf;
        rDY[35] = d_dt_chaste_interface__IKr__xrs;
        rDY[36] = d_dt_chaste_interface__IKs__xs1;
        rDY[37] = d_dt_chaste_interface__IKs__xs2;
        rDY[38] = d_dt_chaste_interface__IK1__xk1;
        rDY[39] = d_dt_chaste_interface__ryr__Jrelnp;
        rDY[40] = d_dt_chaste_interface__ryr__Jrelp;
    }
    
    std::vector<double> Cellohara_rudy_2011_endoFromCellMLOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__v = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -88.00190465
        double var_chaste_interface__CaMK__CaMKt = rY[1];
        // Units: millimolar; Initial value: 0.0125840447
        double var_chaste_interface__intracellular_ions__nai = rY[2];
        // Units: millimolar; Initial value: 7.268004498
        double var_chaste_interface__intracellular_ions__nass = rY[3];
        // Units: millimolar; Initial value: 7.268089977
        double var_chaste_interface__intracellular_ions__ki = rY[4];
        // Units: millimolar; Initial value: 144.6555918
        double var_chaste_interface__intracellular_ions__kss = rY[5];
        // Units: millimolar; Initial value: 144.6555651
        double var_chaste_interface__intracellular_ions__cass = rY[6];
        // Units: millimolar; Initial value: 8.49e-05
        double var_chaste_interface__intracellular_ions__cai = rY[9];
        // Units: millimolar; Initial value: 8.6e-05
        double var_chaste_interface__INa__m = rY[10];
        // Units: dimensionless; Initial value: 0.007344121102
        double var_chaste_interface__INa__hf = rY[11];
        // Units: dimensionless; Initial value: 0.6981071913
        double var_chaste_interface__INa__hs = rY[12];
        // Units: dimensionless; Initial value: 0.6980895801
        double var_chaste_interface__INa__j = rY[13];
        // Units: dimensionless; Initial value: 0.6979908432
        double var_chaste_interface__INa__hsp = rY[14];
        // Units: dimensionless; Initial value: 0.4549485525
        double var_chaste_interface__INa__jp = rY[15];
        // Units: dimensionless; Initial value: 0.6979245865
        double var_chaste_interface__INaL__mL = rY[16];
        // Units: dimensionless; Initial value: 0.0001882617273
        double var_chaste_interface__INaL__hL = rY[17];
        // Units: dimensionless; Initial value: 0.5008548855
        double var_chaste_interface__INaL__hLp = rY[18];
        // Units: dimensionless; Initial value: 0.2693065357
        double var_chaste_interface__Ito__a = rY[19];
        // Units: dimensionless; Initial value: 0.001001097687
        double var_chaste_interface__Ito__iF = rY[20];
        // Units: dimensionless; Initial value: 0.9995541745
        double var_chaste_interface__Ito__iS = rY[21];
        // Units: dimensionless; Initial value: 0.5865061736
        double var_chaste_interface__Ito__ap = rY[22];
        // Units: dimensionless; Initial value: 0.0005100862934
        double var_chaste_interface__Ito__iFp = rY[23];
        // Units: dimensionless; Initial value: 0.9995541823
        double var_chaste_interface__Ito__iSp = rY[24];
        // Units: dimensionless; Initial value: 0.6393399482
        double var_chaste_interface__ICaL__d = rY[25];
        // Units: dimensionless; Initial value: 2.34e-9
        double var_chaste_interface__ICaL__ff = rY[26];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fs = rY[27];
        // Units: dimensionless; Initial value: 0.9102412777
        double var_chaste_interface__ICaL__fcaf = rY[28];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcas = rY[29];
        // Units: dimensionless; Initial value: 0.9998046777
        double var_chaste_interface__ICaL__jca = rY[30];
        // Units: dimensionless; Initial value: 0.9999738312
        double var_chaste_interface__ICaL__ffp = rY[31];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__fcafp = rY[32];
        // Units: dimensionless; Initial value: 0.9999999909
        double var_chaste_interface__ICaL__nca = rY[33];
        // Units: dimensionless; Initial value: 0.002749414044
        double var_chaste_interface__IKr__xrf = rY[34];
        // Units: dimensionless; Initial value: 8.08e-6
        double var_chaste_interface__IKr__xrs = rY[35];
        // Units: dimensionless; Initial value: 0.4550704887
        double var_chaste_interface__IKs__xs1 = rY[36];
        // Units: dimensionless; Initial value: 0.2707758025
        double var_chaste_interface__IKs__xs2 = rY[37];
        // Units: dimensionless; Initial value: 0.0001928503426
        double var_chaste_interface__IK1__xk1 = rY[38];
        // Units: dimensionless; Initial value: 0.9967597594
        double var_chaste_interface__ryr__Jrelnp = rY[39];
        // Units: dimensionless; Initial value: 2.5e-7
        double var_chaste_interface__ryr__Jrelp = rY[40];
        // Units: dimensionless; Initial value: 3.12e-7
        
        
        // Lookup table indexing
        const bool _oob_0 = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->CheckIndex0(var_chaste_interface__membrane__v);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellohara_rudy_2011_endoFromCellMLOpt_LookupTables::Instance()->IndexTable0(var_chaste_interface__membrane__v);
        
        // Mathematics
        const double var_INa__h = (0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hs); // dimensionless
        const double var_reversal_potentials__ENa = 26.712338705498265 * log(mParameters[4] / var_chaste_interface__intracellular_ions__nai); // millivolt
        const double var_CaMK__CaMKb = (0.050000000000000003 * (1.0 - var_chaste_interface__CaMK__CaMKt)) / (1.0 + (0.0015 / var_chaste_interface__intracellular_ions__cass)); // millimolar
        const double var_CaMK__CaMKa = var_CaMK__CaMKb + var_chaste_interface__CaMK__CaMKt; // millimolar
        const double var_INa__fINap = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INa__INa = mParameters[10] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * pow(var_chaste_interface__INa__m, 3.0) * (((1.0 - var_INa__fINap) * var_INa__h * var_chaste_interface__INa__j) + (var_INa__fINap * ((0.98999999999999999 * var_chaste_interface__INa__hf) + (0.010000000000000009 * var_chaste_interface__INa__hsp)) * var_chaste_interface__INa__jp)); // microA_per_microF
        const double var_INaL__fINaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_INaL__INaL = mParameters[12] * (var_chaste_interface__membrane__v - var_reversal_potentials__ENa) * var_chaste_interface__INaL__mL * (((1.0 - var_INaL__fINaLp) * var_chaste_interface__INaL__hL) + (var_INaL__fINaLp * var_chaste_interface__INaL__hLp)); // microA_per_microF
        const double var_reversal_potentials__EK = 26.712338705498265 * log(mParameters[3] / var_chaste_interface__intracellular_ions__ki); // millivolt
        const double var_Ito__fItop = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_Ito__Ito = mParameters[17] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK) * (((1.0 - var_Ito__fItop) * var_chaste_interface__Ito__a * ((_lt_0_row[0] * var_chaste_interface__Ito__iF) + (_lt_0_row[1] * var_chaste_interface__Ito__iS))) + (var_Ito__fItop * var_chaste_interface__Ito__ap * ((_lt_0_row[2] * var_chaste_interface__Ito__iFp) + (_lt_0_row[3] * var_chaste_interface__Ito__iSp)))); // microA_per_microF
        const double var_ICaL__fICaLp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ICaL__fcap = (_lt_0_row[6] * var_chaste_interface__ICaL__fcafp) + (_lt_0_row[7] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__PCa = mParameters[5]; // dimensionless
        const double var_ICaL__PCap = 1.1000000000000001 * var_ICaL__PCa; // dimensionless
        const double var_ICaL__fp = (0.59999999999999998 * var_chaste_interface__ICaL__ffp) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__PhiCaL = (4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cass * _lt_0_row[8]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[9]; // dimensionless
        const double var_ICaL__f = (0.59999999999999998 * var_chaste_interface__ICaL__ff) + (0.40000000000000002 * var_chaste_interface__ICaL__fs); // dimensionless
        const double var_ICaL__fca = (_lt_0_row[4] * var_chaste_interface__ICaL__fcaf) + (_lt_0_row[5] * var_chaste_interface__ICaL__fcas); // dimensionless
        const double var_ICaL__ICaL = ((1.0 - var_ICaL__fICaLp) * var_ICaL__PCa * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * var_ICaL__PCap * var_ICaL__PhiCaL * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaNa = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__nass * _lt_0_row[10]) - (0.75 * mParameters[4]))) / _lt_0_row[11]; // dimensionless
        const double var_ICaL__ICaNa = ((1.0 - var_ICaL__fICaLp) * (0.00125 * var_ICaL__PCa) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00125 * var_ICaL__PCap) * var_ICaL__PhiCaNa * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_ICaL__PhiCaK = (1.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((0.75 * var_chaste_interface__intracellular_ions__kss * _lt_0_row[12]) - (0.75 * mParameters[3]))) / _lt_0_row[13]; // dimensionless
        const double var_ICaL__ICaK = ((1.0 - var_ICaL__fICaLp) * (0.00035740000000000001 * var_ICaL__PCa) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__f * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fca * var_chaste_interface__ICaL__nca))) + (var_ICaL__fICaLp * (0.00035740000000000001 * var_ICaL__PCap) * var_ICaL__PhiCaK * var_chaste_interface__ICaL__d * ((var_ICaL__fp * (1.0 - var_chaste_interface__ICaL__nca)) + (var_chaste_interface__ICaL__jca * var_ICaL__fcap * var_chaste_interface__ICaL__nca))); // microA_per_microF
        const double var_IKr__IKr = mParameters[13] * sqrt(mParameters[3] * 0.18518518518518517) * ((_lt_0_row[14] * var_chaste_interface__IKr__xrf) + (_lt_0_row[15] * var_chaste_interface__IKr__xrs)) * _lt_0_row[16] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IKs__IKs = mParameters[14] * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__intracellular_ions__cai, 1.3999999999999999)))) * var_chaste_interface__IKs__xs1 * var_chaste_interface__IKs__xs2 * (var_chaste_interface__membrane__v - (26.712338705498265 * log((mParameters[3] + (0.018329999999999999 * mParameters[4])) / (var_chaste_interface__intracellular_ions__ki + (0.018329999999999999 * var_chaste_interface__intracellular_ions__nai))))); // microA_per_microF
        const double var_IK1__IK1 = mParameters[11] * sqrt(mParameters[3]) * (1.0 / (1.0 + exp(((var_chaste_interface__membrane__v + 105.8) - (2.6000000000000001 * mParameters[3])) * 0.10534077741493732))) * var_chaste_interface__IK1__xk1 * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_INaCa_i__h1_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.011348161597821153) * _lt_0_row[17]); // dimensionless
        const double var_INaCa_i__h2_i = (var_chaste_interface__intracellular_ions__nai * _lt_0_row[18]) / (88.120000000000005 * var_INaCa_i__h1_i); // dimensionless
        const double var_INaCa_i__k4pp_i = var_INaCa_i__h2_i * 5000.0; // dimensionless
        const double var_INaCa_i__h4_i = 1.0 + ((var_chaste_interface__intracellular_ions__nai * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nai * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k7_i = ((var_chaste_interface__intracellular_ions__nai * var_chaste_interface__intracellular_ions__nai) / (var_INaCa_i__h4_i * 75.0)) * var_INaCa_i__h2_i * 60000.0; // dimensionless
        const double var_INaCa_i__h7_i = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[19]); // dimensionless
        const double var_INaCa_i__h8_i = mParameters[4] / (88.120000000000005 * _lt_0_row[20] * var_INaCa_i__h7_i); // dimensionless
        const double var_INaCa_i__k3pp_i = var_INaCa_i__h8_i * 5000.0; // dimensionless
        const double var_INaCa_i__h10_i = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__k8_i = var_INaCa_i__h8_i * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_i * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__k1_i = (1.0 / var_INaCa_i__h10_i) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k4_i = (((1.0 / var_INaCa_i__h1_i) * 60000.0) / _lt_0_row[21]) + var_INaCa_i__k4pp_i; // dimensionless
        const double var_INaCa_i__k3_i = ((1.0 / var_INaCa_i__h7_i) * 60000.0) + var_INaCa_i__k3pp_i; // dimensionless
        const double var_INaCa_i__x4_i = (5000.0 * var_INaCa_i__k8_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k3_i * 5000.0 * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__k6_i = (1.0 / var_INaCa_i__h4_i) * var_chaste_interface__intracellular_ions__cai * 1500000.0; // dimensionless
        const double var_INaCa_i__x3_i = (var_INaCa_i__k1_i * var_INaCa_i__k3_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (var_INaCa_i__k8_i * var_INaCa_i__k6_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__x2_i = (var_INaCa_i__k1_i * var_INaCa_i__k7_i * (var_INaCa_i__k4_i + 5000.0)) + (var_INaCa_i__k4_i * var_INaCa_i__k6_i * (var_INaCa_i__k1_i + var_INaCa_i__k8_i)); // dimensionless
        const double var_INaCa_i__x1_i = (5000.0 * var_INaCa_i__k4_i * (var_INaCa_i__k7_i + var_INaCa_i__k6_i)) + (5000.0 * var_INaCa_i__k7_i * (5000.0 + var_INaCa_i__k3_i)); // dimensionless
        const double var_INaCa_i__E1_i = var_INaCa_i__x1_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__E2_i = var_INaCa_i__x2_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i); // dimensionless
        const double var_INaCa_i__Gncx = mParameters[15]; // milliS_per_microF
        const double var_INaCa_i__INaCa_i = 0.80000000000000004 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cai, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k7_i) - (var_INaCa_i__E1_i * var_INaCa_i__k8_i))) + ((var_INaCa_i__x3_i / (var_INaCa_i__x1_i + var_INaCa_i__x2_i + var_INaCa_i__x3_i + var_INaCa_i__x4_i)) * var_INaCa_i__k4pp_i)) - (var_INaCa_i__E2_i * var_INaCa_i__k3pp_i))) + (2.0 * ((var_INaCa_i__E2_i * 5000.0) - (var_INaCa_i__E1_i * var_INaCa_i__k1_i)))); // microA_per_microF
        const double var_INaCa_i__h1_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.011348161597821153) * _lt_0_row[22]); // dimensionless
        const double var_INaCa_i__h2_ss = (var_chaste_interface__intracellular_ions__nass * _lt_0_row[23]) / (88.120000000000005 * var_INaCa_i__h1_ss); // dimensionless
        const double var_INaCa_i__k4pp_ss = var_INaCa_i__h2_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k4_ss = (((1.0 / var_INaCa_i__h1_ss) * 60000.0) / _lt_0_row[26]) + var_INaCa_i__k4pp_ss; // dimensionless
        const double var_INaCa_i__h10_ss = ((mParameters[4] * 0.066666666666666666) * (1.0 + (mParameters[4] * 0.20000000000000001))) + 13.5; // dimensionless
        const double var_INaCa_i__h7_ss = 1.0 + ((mParameters[4] * 0.011348161597821153) * _lt_0_row[24]); // dimensionless
        const double var_INaCa_i__h8_ss = mParameters[4] / (88.120000000000005 * _lt_0_row[25] * var_INaCa_i__h7_ss); // dimensionless
        const double var_INaCa_i__k8_ss = var_INaCa_i__h8_ss * ((mParameters[4] * mParameters[4]) / (var_INaCa_i__h10_ss * 75.0)) * 60000.0; // dimensionless
        const double var_INaCa_i__h4_ss = 1.0 + ((var_chaste_interface__intracellular_ions__nass * 0.066666666666666666) * (1.0 + (var_chaste_interface__intracellular_ions__nass * 0.20000000000000001))); // dimensionless
        const double var_INaCa_i__k6_ss = (1.0 / var_INaCa_i__h4_ss) * var_chaste_interface__intracellular_ions__cass * 1500000.0; // dimensionless
        const double var_INaCa_i__k1_ss = (1.0 / var_INaCa_i__h10_ss) * mParameters[2] * 1500000.0; // dimensionless
        const double var_INaCa_i__k7_ss = ((var_chaste_interface__intracellular_ions__nass * var_chaste_interface__intracellular_ions__nass) / (var_INaCa_i__h4_ss * 75.0)) * var_INaCa_i__h2_ss * 60000.0; // dimensionless
        const double var_INaCa_i__x2_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k7_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k4_ss * var_INaCa_i__k6_ss * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__k3pp_ss = var_INaCa_i__h8_ss * 5000.0; // dimensionless
        const double var_INaCa_i__k3_ss = ((1.0 / var_INaCa_i__h7_ss) * 60000.0) + var_INaCa_i__k3pp_ss; // dimensionless
        const double var_INaCa_i__x3_ss = (var_INaCa_i__k1_ss * var_INaCa_i__k3_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (var_INaCa_i__k8_ss * var_INaCa_i__k6_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x1_ss = (5000.0 * var_INaCa_i__k4_ss * (var_INaCa_i__k7_ss + var_INaCa_i__k6_ss)) + (5000.0 * var_INaCa_i__k7_ss * (5000.0 + var_INaCa_i__k3_ss)); // dimensionless
        const double var_INaCa_i__x4_ss = (5000.0 * var_INaCa_i__k8_ss * (var_INaCa_i__k4_ss + 5000.0)) + (var_INaCa_i__k3_ss * 5000.0 * (var_INaCa_i__k1_ss + var_INaCa_i__k8_ss)); // dimensionless
        const double var_INaCa_i__E2_ss = var_INaCa_i__x2_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__E1_ss = var_INaCa_i__x1_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss); // dimensionless
        const double var_INaCa_i__INaCa_ss = 0.20000000000000001 * var_INaCa_i__Gncx * (1.0 / (1.0 + pow(0.00014999999999999999 / var_chaste_interface__intracellular_ions__cass, 2.0))) * ((1.0 * (((3.0 * (((var_INaCa_i__x4_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k7_ss) - (var_INaCa_i__E1_ss * var_INaCa_i__k8_ss))) + ((var_INaCa_i__x3_ss / (var_INaCa_i__x1_ss + var_INaCa_i__x2_ss + var_INaCa_i__x3_ss + var_INaCa_i__x4_ss)) * var_INaCa_i__k4pp_ss)) - (var_INaCa_i__E2_ss * var_INaCa_i__k3pp_ss))) + (2.0 * ((var_INaCa_i__E2_ss * 5000.0) - (var_INaCa_i__E1_ss * var_INaCa_i__k1_ss)))); // microA_per_microF
        const double var_INaK__b3 = ((4.2000000000000002 / ((var_chaste_interface__intracellular_ions__nai * 0.004464285714285714) + (var_chaste_interface__intracellular_ions__ki * 0.0034246575342465752) + 1.5889281507656066)) * 0.0079299999999999995) * 1.732653031203624e-08; // dimensionless
        const double var_INaK__a3 = (1899.0 * pow(mParameters[3] * 2.7917364600781687, 2.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[31]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__b2 = (39.399999999999999 * pow(mParameters[4] / _lt_0_row[29], 3.0)) / ((pow(1.0 + (mParameters[4] / _lt_0_row[30]), 3.0) + pow(1.0 + (mParameters[3] * 2.7917364600781687), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x3 = (var_INaK__a3 * 439120.79239156022) + (var_INaK__b3 * var_INaK__b2 * 9.120000000000001) + (var_INaK__b2 * 5827.679899026527) + (var_INaK__a3 * 5827.679899026527); // dimensionless
        const double var_INaK__b4 = (40.0 * pow(var_chaste_interface__intracellular_ions__ki * 2.0, 2.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[32]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__a1 = (949.5 * pow(var_chaste_interface__intracellular_ions__nai / _lt_0_row[27], 3.0)) / ((pow(1.0 + (var_chaste_interface__intracellular_ions__nai / _lt_0_row[28]), 3.0) + pow(1.0 + (var_chaste_interface__intracellular_ions__ki * 2.0), 2.0)) - 1.0); // dimensionless
        const double var_INaK__x2 = (var_INaK__b2 * 9.120000000000001 * var_INaK__b4) + (var_INaK__a1 * 687.20000000000005 * var_INaK__a3) + (var_INaK__a3 * 9.120000000000001 * var_INaK__b4) + (687.20000000000005 * var_INaK__a3 * var_INaK__b4); // dimensionless
        const double var_INaK__x1 = (var_INaK__a1 * 439120.79239156022) + (var_INaK__b2 * var_INaK__b4 * var_INaK__b3) + (687.20000000000005 * var_INaK__b4 * var_INaK__b3) + (var_INaK__b3 * var_INaK__a1 * 687.20000000000005); // dimensionless
        const double var_INaK__x4 = (var_INaK__b4 * var_INaK__b3 * var_INaK__b2) + (var_INaK__a3 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b2 * 638.99998892834719 * var_INaK__a1) + (var_INaK__b3 * var_INaK__b2 * var_INaK__a1); // dimensionless
        const double var_INaK__INaK = mParameters[16] * ((1.0 * (3.0 * (((var_INaK__x1 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a3) - ((var_INaK__x2 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__b3)))) + (1.0 * (2.0 * (((var_INaK__x4 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * 9.120000000000001) - ((var_INaK__x3 / (var_INaK__x1 + var_INaK__x2 + var_INaK__x3 + var_INaK__x4)) * var_INaK__a1))))); // microA_per_microF
        const double var_INab__INab = (mParameters[8] * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__nai * _lt_0_row[34]) - mParameters[4])) / _lt_0_row[35]; // microA_per_microF
        const double var_IKb__IKb = mParameters[7] * _lt_0_row[33] * (var_chaste_interface__membrane__v - var_reversal_potentials__EK); // microA_per_microF
        const double var_IpCa__IpCa = (mParameters[9] * var_chaste_interface__intracellular_ions__cai) / (0.00050000000000000001 + var_chaste_interface__intracellular_ions__cai); // microA_per_microF
        const double var_ICab__ICab = (mParameters[6] * 4.0 * ((var_chaste_interface__membrane__v * 9309355225.0) * 3.8799692706433766e-07) * ((var_chaste_interface__intracellular_ions__cai * _lt_0_row[36]) - (0.34100000000000003 * mParameters[2]))) / _lt_0_row[37]; // microA_per_microF
        const double var_chaste_interface__membrane__Istim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_ryr__fJrelp = 1.0 / (1.0 + (0.14999999999999999 / var_CaMK__CaMKa)); // dimensionless
        const double var_ryr__Jrel = mParameters[0] * (((1.0 - var_ryr__fJrelp) * var_chaste_interface__ryr__Jrelnp) + (var_ryr__fJrelp * var_chaste_interface__ryr__Jrelp)); // millimolar_per_millisecond
        const double var_chaste_interface__ICaL__ICaL = var_ICaL__ICaL; // microA_per_microF
        const double var_chaste_interface__ICab__ICab = var_ICab__ICab; // microA_per_microF
        const double var_chaste_interface__INa__INa = var_INa__INa; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaK = var_ICaL__ICaK; // microA_per_microF
        const double var_chaste_interface__INaL__INaL = var_INaL__INaL; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_i = var_INaCa_i__INaCa_i; // microA_per_microF
        const double var_chaste_interface__INab__INab = var_INab__INab; // microA_per_microF
        const double var_chaste_interface__IKs__IKs = var_IKs__IKs; // microA_per_microF
        const double var_chaste_interface__INaK__INaK = var_INaK__INaK; // microA_per_microF
        const double var_chaste_interface__IKb__IKb = var_IKb__IKb; // microA_per_microF
        const double var_chaste_interface__ICaL__ICaNa = var_ICaL__ICaNa; // microA_per_microF
        const double var_chaste_interface__IK1__IK1 = var_IK1__IK1; // microA_per_microF
        const double var_chaste_interface__Ito__Ito = var_Ito__Ito; // microA_per_microF
        const double var_chaste_interface__INaCa_i__INaCa_ss = var_INaCa_i__INaCa_ss; // microA_per_microF
        const double var_chaste_interface__IKr__IKr = var_IKr__IKr; // microA_per_microF
        const double var_chaste_interface__IpCa__IpCa = var_IpCa__IpCa; // microA_per_microF
        
        std::vector<double> dqs(20);
        dqs[0] = var_ryr__Jrel;
        dqs[1] = var_chaste_interface__ICaL__ICaK;
        dqs[2] = var_chaste_interface__ICaL__ICaNa;
        dqs[3] = var_chaste_interface__ICaL__ICaL;
        dqs[4] = var_chaste_interface__ICab__ICab;
        dqs[5] = var_chaste_interface__IKb__IKb;
        dqs[6] = var_chaste_interface__INab__INab;
        dqs[7] = var_chaste_interface__IpCa__IpCa;
        dqs[8] = var_chaste_interface__INa__INa;
        dqs[9] = var_INa__h;
        dqs[10] = var_chaste_interface__IK1__IK1;
        dqs[11] = var_chaste_interface__INaL__INaL;
        dqs[12] = var_chaste_interface__IKr__IKr;
        dqs[13] = var_chaste_interface__IKs__IKs;
        dqs[14] = var_chaste_interface__INaCa_i__INaCa_i;
        dqs[15] = var_chaste_interface__INaCa_i__INaCa_ss;
        dqs[16] = var_chaste_interface__INaK__INaK;
        dqs[17] = var_chaste_interface__membrane__Istim;
        dqs[18] = var_chaste_interface__Ito__Ito;
        dqs[19] = var_chaste_interface__environment__time;
        return dqs;
    }
    
template<>
void OdeSystemInformation<Cellohara_rudy_2011_endoFromCellMLOpt>::Initialise(void)
{
    this->mSystemName = "ohara_rudy_2011";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-88.00190465);

    this->mVariableNames.push_back("CaMK__CaMKt");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0125840447);

    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268004498);

    this->mVariableNames.push_back("intracellular_ions__nass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.268089977);

    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555918);

    this->mVariableNames.push_back("intracellular_ions__kss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(144.6555651);

    this->mVariableNames.push_back("intracellular_ions__cass");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.49e-05);

    this->mVariableNames.push_back("intracellular_ions__cansr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.619574538);

    this->mVariableNames.push_back("intracellular_ions__cajsr");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.571234014);

    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.6e-05);

    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007344121102);

    this->mVariableNames.push_back("INa__hf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6981071913);

    this->mVariableNames.push_back("INa__hs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6980895801);

    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979908432);

    this->mVariableNames.push_back("INa__hsp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4549485525);

    this->mVariableNames.push_back("INa__jp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6979245865);

    this->mVariableNames.push_back("INaL__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001882617273);

    this->mVariableNames.push_back("INaL__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5008548855);

    this->mVariableNames.push_back("INaL__hLp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2693065357);

    this->mVariableNames.push_back("Ito__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001001097687);

    this->mVariableNames.push_back("Ito__iF");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541745);

    this->mVariableNames.push_back("Ito__iS");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5865061736);

    this->mVariableNames.push_back("Ito__ap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0005100862934);

    this->mVariableNames.push_back("Ito__iFp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995541823);

    this->mVariableNames.push_back("Ito__iSp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6393399482);

    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.34e-9);

    this->mVariableNames.push_back("ICaL__ff");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__fs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9102412777);

    this->mVariableNames.push_back("ICaL__fcaf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__fcas");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9998046777);

    this->mVariableNames.push_back("ICaL__jca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999738312);

    this->mVariableNames.push_back("ICaL__ffp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__fcafp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999999909);

    this->mVariableNames.push_back("ICaL__nca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002749414044);

    this->mVariableNames.push_back("IKr__xrf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.08e-6);

    this->mVariableNames.push_back("IKr__xrs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4550704887);

    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2707758025);

    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001928503426);

    this->mVariableNames.push_back("IK1__xk1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9967597594);

    this->mVariableNames.push_back("ryr__Jrelnp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.5e-7);

    this->mVariableNames.push_back("ryr__Jrelp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.12e-7);

    this->mParameterNames.push_back("SR_release_current_max");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("SR_uptake_current_max");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_background_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_persistent_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("milliS_per_microF");
    
    this->mDerivedQuantityNames.push_back("SR_release_current");
    this->mDerivedQuantityUnits.push_back("millimolar_per_millisecond");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_channel_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_background_calcium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_background_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_background_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mDerivedQuantityUnits.push_back("dimensionless");
    
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_persistent_sodium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_dyadic_space_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");
    
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("microA_per_microF");
    
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellohara_rudy_2011_endoFromCellMLOpt)
